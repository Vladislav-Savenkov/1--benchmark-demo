
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДеревоДополнительныхРеквизитов();	
	
	ЗаполнитьУсловноеОформление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЗаполнитьТаблицуДополнительныеРеквизиты();
	
КонецПроцедуры

#КонецОбласти


#Область СобытияОбработкиДереваДополнительныхРеквизитов

&НаСервере
Процедура ЗаполнитьДеревоДополнительныхРеквизитов()
		
	ДеревоДополнительныхРеквизитов.ПолучитьЭлементы().Очистить();
	
	мСтрокаВерхнегоУровня = ДеревоДополнительныхРеквизитов.ПолучитьЭлементы().Добавить();
	мСтрокаВерхнегоУровня.ДополнительныйРеквизит = "Дополнительные реквизиты";
	мСтрокаВерхнегоУровня.СтрокаВерхнегоУровня = Истина;

	мСтрокаВерхнегоУровня = мСтрокаВерхнегоУровня.ПолучитьЭлементы();
	
	Для Каждого текСтрока Из Объект.ДополнительныеРеквизиты Цикл
		Если текСтрока.ДополнительныйРеквизит.ГруппаРеквизитов Тогда
			мНоваяСтрока = мСтрокаВерхнегоУровня.Добавить();	
			мНоваяСтрока.ДополнительныйРеквизит = текСтрока.ДополнительныйРеквизит;
			мНоваяСтрока.ОсобыйВидДополнительногоРеквизита = мНоваяСтрока.ДополнительныйРеквизит.ОсобыйВидДополнительногоРеквизита;
			мНоваяСтрока.Картинка = ПолучитьИндексКартинки(мНоваяСтрока.ДополнительныйРеквизит);
			мНоваяСтрока.ГруппаРеквизитов = Истина;
			
			СтрокаИД = ИдентификаторыРодителей.Добавить();
			СтрокаИД.ДополнительныйРеквизит = текСтрока.ДополнительныйРеквизит;
			СтрокаИД.Идентификатор = мНоваяСтрока.ПолучитьИдентификатор();
		ИначеЕсли ЗначениеЗаполнено(текСтрока.Родитель) Тогда
			НайденныйИД = ИдентификаторыРодителей.НайтиСтроки(Новый Структура("ДополнительныйРеквизит", текСтрока.Родитель));
			Если НайденныйИД.Количество() > 0 Тогда
				мРодитель = ДеревоДополнительныхРеквизитов.НайтиПоИдентификатору(НайденныйИД[0].Идентификатор);
				Если НЕ мРодитель = Неопределено Тогда
					мНоваяСтрока = мРодитель.ПолучитьЭлементы().Добавить();
					ЗаполнитьЗначенияСвойств(мНоваяСтрока, текСтрока);
					мНоваяСтрока.ОсобыйВидДополнительногоРеквизита = мНоваяСтрока.ДополнительныйРеквизит.ОсобыйВидДополнительногоРеквизита;
					мНоваяСтрока.ЗаполнятьПоШаблону = ?(ЗначениеЗаполнено(текСтрока.ШаблонЗаполненияДополнительныхРеквизитов), Истина, Ложь);
					мНоваяСтрока.Картинка = ПолучитьИндексКартинки(мНоваяСтрока.ДополнительныйРеквизит);
				КонецЕсли;
			КонецЕсли;			
		Иначе
			мНоваяСтрока = мСтрокаВерхнегоУровня.Добавить();
			ЗаполнитьЗначенияСвойств(мНоваяСтрока, текСтрока);
			мНоваяСтрока.ОсобыйВидДополнительногоРеквизита = мНоваяСтрока.ДополнительныйРеквизит.ОсобыйВидДополнительногоРеквизита;
			мНоваяСтрока.ЗаполнятьПоШаблону = ?(ЗначениеЗаполнено(текСтрока.ШаблонЗаполненияДополнительныхРеквизитов), Истина, Ложь);
			мНоваяСтрока.Картинка = ПолучитьИндексКартинки(мНоваяСтрока.ДополнительныйРеквизит);
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДополнительныеРеквизиты()
	
	Объект.ДополнительныеРеквизиты.Очистить();
	
	мСтрокиВерхнегоУровня = ДеревоДополнительныхРеквизитов.ПолучитьЭлементы().Получить(0).ПолучитьЭлементы();
	Для Каждого текСтрока Из мСтрокиВерхнегоУровня Цикл
		Если текСтрока.ДополнительныйРеквизит.ГруппаРеквизитов Тогда
			мНоваяСтрока = Объект.ДополнительныеРеквизиты.Добавить();
			ЗаполнитьЗначенияСвойств(мНоваяСтрока, текСтрока);
			ПодчиненныеСтроки = текСтрока.ПолучитьЭлементы();
			Для Каждого текСтрока2 Из ПодчиненныеСтроки Цикл
				мНоваяСтрока = Объект.ДополнительныеРеквизиты.Добавить();
				ЗаполнитьЗначенияСвойств(мНоваяСтрока, текСтрока2);
				мНоваяСтрока.Родитель = текСтрока.ДополнительныйРеквизит;
			КонецЦикла;
		Иначе
			мНоваяСтрока = Объект.ДополнительныеРеквизиты.Добавить();
			ЗаполнитьЗначенияСвойств(мНоваяСтрока, текСтрока);			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДополнительныхРеквизитовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	Если Элемент.ТекущиеДанные.СтрокаВерхнегоУровня = Истина Тогда
		Возврат;	
	КонецЕсли;
	
	Если Элементы.ДеревоДополнительныхРеквизитов.ТекущийЭлемент.Имя = "ДеревоДополнительныхРеквизитовЗначениеРеквизита" и ТекущаяСтрока.ЗаполняетсяНаМК Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоДополнительныхРеквизитовПриНачалеРедактированияНаСервере(Элемент.ТекущиеДанные.ПолучитьИдентификатор());
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДополнительныхРеквизитовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;
	Если Копирование И ТекущаяСтрока.СтрокаВерхнегоУровня = Истина Тогда
		Отказ = Истина;	
	КонецЕсли;
	
	ДеревоДополнительныхРеквизитовПередНачаломДобавленияНаСервере(Элемент.ТекущиеДанные.ПолучитьИдентификатор(), Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДополнительныхРеквизитовПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.СтрокаВерхнегоУровня Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДеревоДополнительныхРеквизитовПередНачаломДобавленияНаСервере(ИДСтроки, Отказ)
	
	ТекущаяСтрока = ДеревоДополнительныхРеквизитов.НайтиПоИдентификатору(ИДСтроки);
	
	Если НЕ ТекущаяСтрока.СтрокаВерхнегоУровня И ЗначениеЗаполнено(ТекущаяСтрока.ДополнительныйРеквизит)
			И ТекущаяСтрока.ДополнительныйРеквизит.ГруппаРеквизитов = Ложь Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Подчиненные доп. реквизиты можно добавлять только в группу!";
		Сообщение.Сообщить();	
		
	ИначеЕсли НЕ ТекущаяСтрока.СтрокаВерхнегоУровня И ОпределениеУровняДерева(ИДСтроки) > 1 Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Доступна только группировки первого уровня. В группу можно добавлять только доп. реквизиты.";
		Сообщение.Сообщить();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДеревоДополнительныхРеквизитовПриНачалеРедактированияНаСервере(ИДСтроки)
	
	ТекущаяСтрока = ДеревоДополнительныхРеквизитов.НайтиПоИдентификатору(ИДСтроки);
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТипЗнч(ТекущаяСтрока.ЗначениеРеквизита) = Тип("Булево") Тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.ДополнительныйРеквизит) Тогда
			ТипЗначенияДополнительногоРеквизита = ТекущаяСтрока.ДополнительныйРеквизит.ТипЗначения;
			Элементы.ДеревоДополнительныхРеквизитов.ПодчиненныеЭлементы.ГруппаЗначений.ПодчиненныеЭлементы.ДеревоДополнительныхРеквизитовЗначениеРеквизита.ОграничениеТипа = ТипЗначенияДополнительногоРеквизита;
			ТекущаяСтрока.ЗначениеРеквизита = ТипЗначенияДополнительногоРеквизита.ПривестиЗначение(ТекущаяСтрока.ЗначениеРеквизита);			
		Иначе
			ТекущаяСтрока.ЗначениеРеквизита = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДополнительныхРеквизитовПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДополнительныхРеквизитовЗаполняетсяНаМКПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоДополнительныхРеквизитов.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		ДеревоДополнительныхРеквизитовЗаполняетсяНаМКПриИзмененииНаСервере(ТекущиеДанные.ПолучитьИдентификатор());	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДеревоДополнительныхРеквизитовЗаполняетсяНаМКПриИзмененииНаСервере(ИДСтроки)
	
	ТекущаяСтрока = ДеревоДополнительныхРеквизитов.НайтиПоИдентификатору(ИДСтроки);
	
	Если ТекущаяСтрока.ДополнительныйРеквизит.ОсобыйВидДополнительногоРеквизита = Перечисления.атл_ОсобыеВидыДополнительныхРеквизитов.Гиперссылка Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Дополнительный реквизит """ + СокрЛП(ТекущаяСтрока.ДополнительныйРеквизит) + """ с типом данных ""Гиперссылка"" не может заполняться на стороне МК!";
		Сообщение.Сообщить();		
		ТекущаяСтрока.ЗаполняетсяНаМК = Ложь;
		Возврат;
	КонецЕсли;
	Если ТекущаяСтрока.ЗаполняетсяНаМК Тогда
		ТекущаяСтрока.ЗначениеРеквизита = Неопределено;

		ТипЗначенияДополнительногоРеквизита = ТекущаяСтрока.ДополнительныйРеквизит.ТипЗначения;
		Элементы.ДеревоДополнительныхРеквизитов.ПодчиненныеЭлементы.ГруппаЗначений.ПодчиненныеЭлементы.ДеревоДополнительныхРеквизитовЗначениеРеквизита.ОграничениеТипа = ТипЗначенияДополнительногоРеквизита;
		ТекущаяСтрока.ЗначениеРеквизита = ТипЗначенияДополнительногоРеквизита.ПривестиЗначение(ТекущаяСтрока.ЗначениеРеквизита);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоДополнительныхРеквизитовДополнительныйРеквизитПриИзменении(Элемент)
	
	ДеревоДополнительныхРеквизитовДополнительныйРеквизитПриИзмененииНаСервере(Элементы.ДеревоДополнительныхРеквизитов.ТекущиеДанные.ПолучитьИдентификатор(),
								?(Элементы.ДеревоДополнительныхРеквизитов.ТекущиеДанные.ПолучитьЭлементы().Количество() > 0, Истина, Ложь));
	
КонецПроцедуры

&НаСервере
Процедура ДеревоДополнительныхРеквизитовДополнительныйРеквизитПриИзмененииНаСервере(ИДСтроки, ЕстьПодчиненные)
	
	ТекущаяСтрока = ДеревоДополнительныхРеквизитов.НайтиПоИдентификатору(ИДСтроки);	
		
	Если ЗначениеЗаполнено(ТекущаяСтрока.ДополнительныйРеквизит) И ТекущаяСтрока.ДополнительныйРеквизит.ГруппаРеквизитов 
			И ОпределениеУровняДерева(ИДСтроки) > 1	Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Доступна только группировки первого уровня. В группу можно добавлять только доп. реквизиты.";		
		Сообщение.Сообщить();
		ТекущаяСтрока.ДополнительныйРеквизит = Неопределено;
		Возврат;
		
	ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.ДополнительныйРеквизит) И ТекущаяСтрока.ДополнительныйРеквизит.ГруппаРеквизитов Тогда
		ТекущаяСтрока.ЗаполняетсяНаМК = Ложь;	
		ТекущаяСтрока.Обязателен = Ложь;
		ТекущаяСтрока.ЗначениеРеквизита = Неопределено;
				
	Иначе
		Если ЕстьПодчиненные Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нельзя выбрать дополнительный реквизит в качестве группы. Выберите группу или удалите подчиненные элементы.";		
			Сообщение.Сообщить();
			ТекущаяСтрока.ДополнительныйРеквизит = Неопределено;
			Возврат;
		КонецЕсли;
		
		ТипЗначенияДополнительногоРеквизита = ТекущаяСтрока.ДополнительныйРеквизит.ТипЗначения;			
		Если ТипЗначенияДополнительногоРеквизита = Неопределено Тогда
			ТекущаяСтрока.ЗначениеРеквизита 	 = Неопределено;
		Иначе
			Элементы.ДеревоДополнительныхРеквизитов.ПодчиненныеЭлементы.ГруппаЗначений.ПодчиненныеЭлементы.ДеревоДополнительныхРеквизитовЗначениеРеквизита.ОграничениеТипа = ТипЗначенияДополнительногоРеквизита;			
			ТекущаяСтрока.ЗначениеРеквизита = ТипЗначенияДополнительногоРеквизита.ПривестиЗначение(ТекущаяСтрока.ЗначениеРеквизита);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.ДополнительныйРеквизит) Тогда
			ТекущаяСтрока.ЗаполняетсяНаМК = ТекущаяСтрока.ДополнительныйРеквизит.ЗаполняетсяНаМК;
			ТекущаяСтрока.Обязателен 	  = ТекущаяСтрока.ДополнительныйРеквизит.Обязателен;
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(ТекущаяСтрока.ДополнительныйРеквизит) Тогда		
		ТекущаяСтрока.Картинка = ПолучитьИндексКартинки(ТекущаяСтрока.ДополнительныйРеквизит);
		ТекущаяСтрока.ГруппаРеквизитов = ТекущаяСтрока.ДополнительныйРеквизит.ГруппаРеквизитов;
		ТекущаяСтрока.ОсобыйВидДополнительногоРеквизита = ТекущаяСтрока.ДополнительныйРеквизит.ОсобыйВидДополнительногоРеквизита;
	Иначе
		ТекущаяСтрока.ОсобыйВидДополнительногоРеквизита = Перечисления.атл_ОсобыеВидыДополнительныхРеквизитов.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ПрочиеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьУсловноеОформление()
	
	ЭлементыУФ = УсловноеОформление.Элементы;
	ЭлементыУФ.Очистить();
	
	// Текст Дополнительные реквизиты
	НовыйЭлементУФ = ЭлементыУФ.Добавить();
	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовДополнительныйРеквизит");
	
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитов.СтрокаВерхнегоУровня");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	НовыйЭлементУФ.Оформление.УстановитьЗначениеПараметра("Текст", "Дополнительные реквизиты");
	
	// Не доступность строки верхнего уровня
	НовыйЭлементУФ = ЭлементыУФ.Добавить();
	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовДополнительныйРеквизит");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗначениеРеквизита");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗаполняетсяНаМК");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовОбязателен");	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗаполнятьПоШаблону");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовШаблонЗаполненияДополнительныхРеквизитов");
	
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитов.СтрокаВерхнегоУровня");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	НовыйЭлементУФ.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Не доступность колонок для группы реквизитов
	НовыйЭлементУФ = ЭлементыУФ.Добавить();
	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗначениеРеквизита");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗаполняетсяНаМК");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовОбязателен");	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗаполнятьПоШаблону");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовШаблонЗаполненияДополнительныхРеквизитов");
	
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитов.ГруппаРеквизитов");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитов.ДополнительныйРеквизит");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
		
	НовыйЭлементУФ.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Доступность значения реквизита
	НовыйЭлементУФ = ЭлементыУФ.Добавить();
	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗначениеРеквизита");	
	
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитов.ЗаполнятьПоШаблону");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	НовыйЭлементУФ.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Доступность Шаблона заполнения дополнительных реквизитов
	НовыйЭлементУФ = ЭлементыУФ.Добавить();
	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовШаблонЗаполненияДополнительныхРеквизитов");	
	
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитов.ЗаполнятьПоШаблону");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	НовыйЭлементУФ.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Условие при МК
	НовыйЭлементУФ = ЭлементыУФ.Добавить();
	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗначениеРеквизита");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗаполнятьПоШаблону");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовШаблонЗаполненияДополнительныхРеквизитов");
	
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитов.ЗаполняетсяНаМК");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;	
		
	НовыйЭлементУФ.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	// Условия для видов доп. реквизитов Координата и Коллекция картинок
	НовыйЭлементУФ = ЭлементыУФ.Добавить();
	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитовЗаполняетсяНаМК");
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
		
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоДополнительныхРеквизитов.ОсобыйВидДополнительногоРеквизита");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	СписокОсобыхВидов = Новый СписокЗначений;
	СписокОсобыхВидов.Добавить(Перечисления.атл_ОсобыеВидыДополнительныхРеквизитов.КоллекцияКартинок);
	СписокОсобыхВидов.Добавить(Перечисления.атл_ОсобыеВидыДополнительныхРеквизитов.Координата);
	ОтборЭлемента.ПравоеЗначение = СписокОсобыхВидов;	
		
	НовыйЭлементУФ.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаСервере
Функция ОпределениеУровняДерева(текИДСтроки)
	
	текИндекс = 3;	
	
	мСтрокиВерхнегоУровня = ДеревоДополнительныхРеквизитов.ПолучитьЭлементы().Получить(0).ПолучитьЭлементы();
	Для Каждого текСтрока Из мСтрокиВерхнегоУровня Цикл
		// 1 уровень
		Если текСтрока.ПолучитьИдентификатор() = текИДСтроки Тогда
			текИндекс = 1;
			Прервать;
		КонецЕсли;
		
		// 2 уровень
		ПодчиненныеСтроки = текСтрока.ПолучитьЭлементы();
		Для Каждого текСтрока2 Из ПодчиненныеСтроки Цикл
			Если текСтрока2.ПолучитьИдентификатор() = текИДСтроки Тогда
				текИндекс = 2;
				Прервать;
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;
	
	Возврат текИндекс;
	
КонецФункции

&НаСервере
Функция ПолучитьИндексКартинки(ДопРеквизит)
	
	Если ДопРеквизит.ГруппаРеквизитов И ДопРеквизит.ПометкаУдаления Тогда
		Возврат 1;
	ИначеЕсли ДопРеквизит.ГруппаРеквизитов И ДопРеквизит.ПометкаУдаления = Ложь Тогда
		Возврат 0;
	ИначеЕсли ДопРеквизит.ГруппаРеквизитов = Ложь И ДопРеквизит.ПометкаУдаления Тогда
		Возврат 4;
	Иначе
		Возврат 3;			
	КонецЕсли;
		
КонецФункции

#КонецОбласти

