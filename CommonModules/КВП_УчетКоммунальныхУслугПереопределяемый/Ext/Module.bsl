////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Процедура получает размеры тарифов.
//
// Параметры:
//  Период       - период получения данных.
//  Услуга       - услуга, по которой происходит поиск размеров тарифов.
//  Объект       - объект или список объектов, для которого определяется тариф: здание, подъезд,
//                 помещение, лицевой счет. Получение размера тарифа происходит в порядке
//                 приоритета установки тарифа на объекты: помещение, подъезд, здание.
//  ВидТарифа    - ссылка или Список значений со ссылками на перечисление "Виды тарифов";
//                 Если не указан, то сначала происходит попытка получения по видам тарифов: "Общий",
//                     "Дневной", "Ночной", "Пиковый", "Комиссия банка" - в порядке их приоритетов,
//                 Если указан - происходит определение вида тарифа по параметрам объекта.
//
Процедура ПриПолученииТарифаПоЛицевомуСчету(Период,
									 Организация, 
									 Услуга, 
									 Знач Объект = Неопределено,
									 ВидТарифа = Неопределено,
									 РезультатТаблица,
									 ДопСтруктураПараметров = Неопределено) Экспорт
	
КонецПроцедуры

Процедура ПолучитьКэшТарифовПереопределенный(КэшТарифов, Организация, СписокПомещений, СписокЗданий, ТаблицаУслуг, ЭтоДобровольноеСтрахование, Период) Экспорт
	
	
КонецПроцедуры

// Получает сведения для взаиморасчетов для указанного лицевого счета.
//
// Параметры:
//  Договор         - СправочникСсылка.ДоговорыКонтрагентов - договор, который необходимо переопределить.
//  Объект          – лицевой счет или парковочное место, для которых
//                    необходимо найти договор или контрагента;
//  Дата            - дата поиска контрагента или договора контрагента;
//  ИскомыйРесурс  - Строка - задается, если необходимо получить конкретный параметр: контрагента или договор контрагента.
//  Услуга         - СправочникСсылка.КВП_Услуги - ссылка на услугу, по которой нужно получить искомый ресурс.
//
Процедура ПолучитьСведенияДляВзаиморасчетовПоЛицевомуСчету(Договор, ЛицевойСчет, Организация, Дата = Неопределено,
																	ИскомыйРесурс = Неопределено, Услуга = Неопределено) Экспорт
	
	
	
КонецПроцедуры

// Переопределяет текст запроса, получающий даты изменения договора по лицевому счету.
// Параметры:
//  Запрос - Запрос - объект запроса.
//  ТекстЗапросаДоговор - Строка - текст запроса.
//  НачалоПериода - Дата - начало расчетного периода.
//  КонецПериода - Дата - конец расчетного периода.
//  Организация - СправочникСсылка.Организации - организация, по которой производится начисление.
//  Объект - СправочникСсылка.КВП_ЛицевыеСчета - лицевой счет, по которому производится начисление.
//  Услуга - СправочникСсылка.КВП_Услуги - услуга, по которой производится начисление.
//
Процедура ПереопределитьТекстЗапросаИзменениеДоговораВПериоде(Запрос, ТекстЗапросаДоговор, НачалоПериода, КонецПериода, Организация, Объект, Услуга) Экспорт
	
КонецПроцедуры

Процедура ПереопределитьПолучитьТаблицуНачисленияПени (ТаблицаЗадолженностей, Период,
													   Организация, 
													   НастройкиУчетнойПолитикиТСЖ, 
													   Объект, 
													   Услуга, 
													   ПолучатьСтрокиСНулевойБазой) Экспорт

КонецПроцедуры

#Область ОтражениеНачисленийВРеглУчете

// Процедура позволяет переопределить таблицу начислений, по данным которой
// для разных документов формируются движения в регистре накопления для отражения
// начислений в регл. учете.
Процедура ПриОпределенииТаблицыНачисленийДляФормированияДвиженийПоРегиструДляОтраженияНачисленийВРеглУчете(ТаблицаНачислений, ДокументОбъект, ДопПараметры, Отказ) Экспорт
	
	// Алгоритм формирования движений по регистру для отражения начислений в регл. учете:
	// 1. В ОбработкеПроведения документа формируются движения по регистру "УПЖКХ_Начисления".
	// 2. Из ОбработкиПроведения документа вызывается процедура:
	//    "СформироватьДвиженияДляОтраженияНачисленийВРеглУчете(ДокументОбъект, ЭтоАренда = Ложь, ЭтоДобровольноеСтрахование = Ложь, ДопПараметры = Неопределено)".
	//    В эту процедуру в ДопПараметры можно передать структуру с необходимыми ключами,
	//    например, которые определяют, что это проведение из документа "Регистрация оплаты",
	//    и что необходимо сформировать движения по отражению начислений пени по их оплате.
	// 3. В процедуре "СформироватьДвиженияДляОтраженияНачисленийВРеглУчете" в ТаблицаНачислений выгружаются
	//    движения по регистру "УПЖКХ_Начисления" документа-объекта, и для каждой строки ТаблицыНачислений
	//    в регистре для отражения начислений формируется запись.
	//    ПРИ ЭТОМ:
	//    Выгруженная ТаблицаНачислений передается в текущую переопределяемую процедуру,
	//    Где можно:
	//               - "поймать" переданные в п.2 параметры и переопределить ТаблицуНачислений,
	//                  например, удалив из нее строки, по которым не нужно производить отражение начислений;
	//               - взвести флаг Отказ в Истина, чтобы движения для отражения начислений вообще не сформировались.
	
	// ПРИМЕР ПЕРЕОПРЕДЕЛЕНИЯ:
	
	//Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КВП_РегистрацияОплаты")
	//   И ТипЗнч(ДопПараметры) = Тип("Структура")
	//   И ДопПараметры.Свойство("ОтразитьОплатуПениКакНачисление")
	//   И ДопПараметры.ОтразитьОплатуПениКакНачисление = Истина Тогда
	//	
	//	СтруктураПоискаОплатПени = Новый Структура;
	//	СтруктураПоискаОплатПени.Вставить("РазделУчета",   Перечисления.УПЖКХ_РазделыУчета.Пени);
	//	СтруктураПоискаОплатПени.Вставить("ВидНачисления", Перечисления.УПЖКХ_ВидыНачислений.Оплата);
	//	
	//	СтрокиОплатыПени = ТаблицаНачислений.НайтиСтроки(СтруктураПоискаОплатПени);
	//	ТаблицаНачислений = ТаблицаНачислений.Скопировать(СтрокиОплатыПени);
	//	
	//	// Так как оплата уменьшает долг и двигает регистры с "-",
	//	// то для отражения начисления сумму нужно инвертировать.
	//	Для Каждого ТекСтрокаНачисления Из ТаблицаНачислений Цикл
	//		ТекСтрокаНачисления.СуммаНачисления = (-1) * ТекСтрокаНачисления.СуммаНачисления;
	//	КонецЦикла;
	//	
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

