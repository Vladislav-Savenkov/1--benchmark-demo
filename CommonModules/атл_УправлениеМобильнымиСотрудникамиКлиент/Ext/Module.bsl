
Процедура ОбновитьАктивностьПользователяНаКлиенте() Экспорт
	
	атл_УправлениеМобильнымиСотрудникамиСервер.ОбновитьАктивностьПользователя();	
	
КонецПроцедуры

Процедура ДобавитьНовыеПолученныеСообщенияНаКлиенте() Экспорт
		
	мКолвоНепрочитанных = атл_УправлениеМобильнымиСотрудникамиСервер.ПолучитьКоличествоНеПрочитанныхСообщений();	
	ФормаОткрыта = ПроверитьФормаСообщенийОткрыта();
	//Если мКолвоНепрочитанных > 0 Тогда
	//	ПоказатьОповещениеПользователя("Новое сообщение", мСсылкаНаФорму, "Количество непрочитанных: " + Строка(мКолвоНепрочитанных), БиблиотекаКартинок.Информация32);		
	//КонецЕсли;
	Если ФормаОткрыта = Ложь И  мКолвоНепрочитанных > 0 Тогда		
		ОткрытьФорму("Обработка.атл_ОбменСообщениями.Форма.СписокСобеседников");				
	КонецЕсли;	
	
КонецПроцедуры

Функция ПроверитьФормаСообщенийОткрыта()
	
	КоллекцияОкон = ПолучитьОкна();
	Для Каждого текОкно Из КоллекцияОкон Цикл
		Если НЕ текОкно = Неопределено И НЕ текОкно.Основное Тогда
			мСодержимоеОкна = текОкно.ПолучитьСодержимое();			
			Если НЕ мСодержимоеОкна = Неопределено И мСодержимоеОкна.ИмяФормы = "Обработка.атл_ОбменСообщениями.Форма.СписокСобеседников" Тогда
				//мСсылкаНаФорму = текОкно.ПолучитьНавигационнуюСсылку();
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьПериодичностьОбновленияОкнаСообщений() Экспорт
	
	мПериодичностьОбновления = атл_УправлениеМобильнымиСотрудникамиСервер.ПолучитьЗначениеКонстанты("атл_ПериодичностьОбновленияОкнаСообщений");
	Если мПериодичностьОбновления = 0 Тогда
		Возврат 30;
	Иначе
		Возврат мПериодичностьОбновления;
	КонецЕсли;	
	
КонецФункции

Процедура ЗапуститьОбработкиПоНастройкамПользователяНаКлиенте() Экспорт 
		
	мНастройки = атл_УправлениеМобильнымиСотрудникамиСервер.ПолучитьНастройкиДляОткрытияФормПриЗапускеСистемы();
		
	Если мНастройки.атл_ПоказыватьСписокСобеседниковПриЗапускеПрограммы Тогда
		ОткрытьФорму("Обработка.атл_ОбменСообщениями.Форма.СписокСобеседников");		
	КонецЕсли;
	
	Если мНастройки.атл_ПоказыватьСписокУведомленийПриЗапускеПрограммы Тогда		
		ОткрытьФорму("Обработка.атл_ПросмотрУведомлений.Форма.СписокУведомлений");
	КонецЕсли;
	
	Если мНастройки.атл_ПоказыватьМониторРуководителяМобильныхСотрудниковПриЗапускеПрограммы Тогда		
		ОткрытьФорму("Обработка.атл_МониторРуководителяМобильныхСотрудников.Форма.Форма");
	КонецЕсли;
	
	Если мНастройки.атл_ПоказыватьИнформациюОХодеОбменаССерверомУМС Тогда	
		ОткрытьФорму("Обработка.атл_ИнформацияОХодеОбменаДаннымиУМС.Форма.Форма");
	КонецЕсли;
	
	
	//проверяем, является ли пользователь тем, под кем должна запускаться обработка обмена данными с сервером
	Если мНастройки.ЗапускатьОбменДаннымиУМС Тогда
		Если мНастройки.УжеЕстьСоединенияСБазой Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Пользователем с таким именем уже выполнен вход в систему. Обработка фоновый обмен данными не запущена.";			
			Сообщение.Сообщить();			
		Иначе
			Если мНастройки.РазрешеноИспользованиеОбменаДаннымиУМС Тогда
				ОткрытьФорму("Обработка.атл_ОбменДаннымиУМС.Форма.Форма");	
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "У текущего пользователя нет прав доступа для запуска обработки обмена данными!";				
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьОбновлениеИнформационнойБазыНаКлиенте() Экспорт 
	
	мПараметрыОбновления =  Новый Структура;
	мПараметрыОбновления.Вставить("НеобходимоЗакрытьПриложение", Ложь);	
	мПараметрыОбновления.Вставить("ПараметрыВерсии", Неопределено);
	мПараметрыОбновления.Вставить("ОткрытьФормуОписанияОбновлений", Ложь);
	мПараметрыОбновления.Вставить("ТекстВопросаОЗавершенииРаботы", "");
	мПараметрыОбновления.Вставить("ТекстПредупреждения", "");
	мПараметрыОбновления.Вставить("ПервыйЗапуск", Ложь);
		
	атл_УправлениеМобильнымиСотрудникамиСервер.ВыполнитьОбновлениеИнформационнойБазы(мПараметрыОбновления);
	
	Если НЕ мПараметрыОбновления.ТекстВопросаОЗавершенииРаботы = "" Тогда
		Ответ = Вопрос(мПараметрыОбновления.ТекстВопросаОЗавершенииРаботы, РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗавершитьРаботуСистемы();	
		КонецЕсли;
	КонецЕсли;
	
	Если мПараметрыОбновления.ОткрытьФормуОписанияОбновлений Тогда
		ОткрытьФорму("Обработка.атл_ОбновлениеИнформационнойБазы.Форма.ОписаниеОбновлений", мПараметрыОбновления.ПараметрыВерсии);
	КонецЕсли;
	
	Если мПараметрыОбновления.ПервыйЗапуск Тогда
		ОткрытьФорму("РегистрСведений.атл_НастройкиПодсистемыУМС.ФормаЗаписи", Новый Структура("ПервыйЗапуск", Истина));
	КонецЕсли;
	
	Если НЕ мПараметрыОбновления.ТекстПредупреждения = "" Тогда
		ПоказатьПредупреждение(Новый ОписаниеОповещения("ЗавершитьРаботуСистемуСПредупреждением", ЭтотОбъект), мПараметрыОбновления.ТекстПредупреждения);	
	ИначеЕсли мПараметрыОбновления.НеобходимоЗакрытьПриложение Тогда
		ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗавершитьРаботуСистемуСПредупреждением(РезультатЗакрытия) Экспорт
	
	ЗавершитьРаботуСистемы(Ложь);	
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПараметровСеанаса() Экспорт
	
	Если НЕ ЗначениеЗаполнено(атл_УправлениеМобильнымиСотрудникамиСервер.ПолучитьПараметрСеанса("ТекущийПользователь")) Тогда
		
		мОповещение = Новый ОписаниеОповещения("ОповещениеОЗакрытииСистемы", ЭтотОбъект);
		ПоказатьПредупреждение(мОповещение, "Пользователь, под которым запущена программа не имеет прав доступа на добавление пользователя в справочник 'Пользователи'. Программу будет закрыта!");
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ОповещениеОЗакрытииСистемы(РезультатЗакрытия) Экспорт
	
	ЗавершитьРаботуСистемы();	
	
КонецПроцедуры

Процедура ЗадаватьВопросОЗакрытии() Экспорт
	
	ОбработкаОтвета = Новый ОписаниеОповещения("ДействияПередЗавершениемРаботыСистемыОбработкаЗавершения", ЭтотОбъект);
	ПоказатьВопрос(ОбработкаОтвета,"Завершить работу с программой?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

Процедура ДействияПередЗавершениемРаботыСистемыОбработкаЗавершения(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		ПараметрыЗавершенияПрограммы.Вставить("ДействияПередЗавершениемРаботыСистемыВыполнены");
		ЗавершитьРаботуСистемы();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтключитьРегистрациюСобытийВЖурналеРегистрации() Экспорт
	
	//отключение регистрации событий по некоторых регистрам сведений
	атл_ДополнительныйМодульСервер.атл_ОтключитьРегистрациюСобытийВЖурналеРегистрации();
	
КонецПроцедуры