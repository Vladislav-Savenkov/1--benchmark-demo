
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка) 
	
	ЗаполнитьСписокМесяцев();
	
	Если Параметры.НеИнтерактивноеОткрытие = Истина Тогда
		Объект.Месяц = Параметры.Месяц;
		Объект.Год = Параметры.Год;
		АдресОтбораСпискаСотрудников = Параметры.АдресОтбораСпискаСотрудников;
		ПредставлениеМесяца = СписокМесяцев.НайтиПоИдентификатору(Объект.Месяц-1).Значение;				
	Иначе	
		ЗаполнитьЗначенияПоУмолчанию();	
	КонецЕсли;
	
	СформироватьКолонкиТЗГрафикаРаботы();		
	ВидимостьКолонокТЗГрафикаРаботы();
	РаскраситьВыходныеДни();
	
	ЗаполнитьСписокСотрудников();
	ЗаполнитьТЗГрафикаРаботы();
	
	МесяцСтарый = Объект.Месяц;
	ГодСтарый = Объект.Год;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗаписаноВРегистр = Ложь и Модифицированность = Истина Тогда
		мОповещение =  Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(мОповещение, "Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Отказ = Истина;		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОтображениеЭлементовФормы

&НаСервере
Процедура СформироватьКолонкиТЗГрафикаРаботы()
	
	мТЗГрафикаРаботы = Новый ТаблицаЗначений;
	
	мТипПользователь = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
	мКолонкаСотрудник = мТЗГрафикаРаботы.Колонки.Добавить("Сотрудник", мТипПользователь, "Сотрудник");
	мКолонкаСотрудник = Элементы.Добавить("ТЗГрафикаРаботы_Сотрудник", Тип("ПолеФормы"), Элементы.ТЗГрафикаРаботы);	
	мКолонкаСотрудник.Вид = ВидПоляФормы.ПолеВвода;
	мКолонкаСотрудник.АвтоОтметкаНезаполненного = Истина;	
	мКолонкаСотрудник.КнопкаВыпадающегоСписка = Ложь;
	мКолонкаСотрудник.КнопкаВыбора = Ложь;
	мКолонкаСотрудник.КнопкаОчистки = Ложь;
	мКолонкаСотрудник.КнопкаОткрытия = Истина;                                         
	мКолонкаСотрудник.КнопкаСоздания = Ложь;
	мКолонкаСотрудник.РедактированиеТекста = Ложь;	
	мКолонкаСотрудник.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
	
	мГруппаКолонок = Элементы.Добавить("ГруппаКолонокГрафика", Тип("ГруппаФормы"), Элементы.ТЗГрафикаРаботы);
	мГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
	мГруппаКолонок.Группировка = ГруппировкаКолонок.Вертикальная;
	
	мКолонкаСменный = мТЗГрафикаРаботы.Колонки.Добавить("Сменный", Новый ОписаниеТипов("Булево"), "");
	мКолонкаСменный = Элементы.Добавить("ТЗГрафикаРаботы_Сменный", Тип("ПолеФормы"), мГруппаКолонок); 
	мКолонкаСменный.Вид = ВидПоляФормы.ПолеФлажка; 		
	мКолонкаСменный.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;		
	мКолонкаСменный.ТолькоПросмотр = Истина;	
	
	мТипГрафик = Новый ОписаниеТипов("СправочникСсылка.атл_ГрафикиОбслуживания");
	мКолонкаГрафик = мТЗГрафикаРаботы.Колонки.Добавить("ГрафикОбслуживания", мТипГрафик, "График");
	мКолонкаГрафик = Элементы.Добавить("ТЗГрафикаРаботы_ГрафикОбслуживания", Тип("ПолеФормы"), мГруппаКолонок);
	мКолонкаГрафик.Заголовок = "График";
	мКолонкаГрафик.Вид = ВидПоляФормы.ПолеВвода;	
	мКолонкаГрафик.КнопкаВыпадающегоСписка = Ложь;
	мКолонкаГрафик.КнопкаВыбора = Ложь;
	мКолонкаГрафик.КнопкаОчистки = Ложь;
	мКолонкаГрафик.КнопкаОткрытия = Истина;
	мКолонкаГрафик.КнопкаСоздания = Ложь;
	мКолонкаГрафик.РедактированиеТекста = Ложь;	


	мТипСтрока = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100));
	мТипБулево = Новый ОписаниеТипов("Булево");
		
	Для Сч = 1 По 31 Цикл
		мИмя = "День" + Строка(Сч);
		мИмяРасшифровка = "ДеньРасшифровка" + Строка(Сч);
		
		мГруппаКолонок = Элементы.Добавить("ГруппаКолонок" + мИмя, Тип("ГруппаФормы"), Элементы.ТЗГрафикаРаботы);
		мГруппаКолонок.Вид = ВидГруппыФормы.ГруппаКолонок;
		мГруппаКолонок.Группировка = ГруппировкаКолонок.Вертикальная;
		мГруппаКолонок.Ширина = 10;
		мГруппаКолонок.РастягиватьПоГоризонтали = Ложь;
	
		мКолонкаДень = мТЗГрафикаРаботы.Колонки.Добавить(мИмя, мТипБулево, "");
		мКолонкаДень = Элементы.Добавить("ТЗГрафикаРаботы_" + мИмя, Тип("ПолеФормы"), мГруппаКолонок); 		
		мКолонкаДень.Вид = ВидПоляФормы.ПолеФлажка; 		
		мКолонкаДень.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;						
		мКолонкаДень.Заголовок = Строка(Сч);		
		мКолонкаДень.ГоризонтальноеПоложениеВШапке = ГоризонтальноеПоложениеЭлемента.Центр;
		мКолонкаДень.ГоризонтальноеПоложениеВГруппе  = ГоризонтальноеПоложениеЭлемента.Центр;
		мКолонкаДень.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;		
			
		мКолонкаДеньРасшифровка = мТЗГрафикаРаботы.Колонки.Добавить(мИмяРасшифровка, мТипСтрока, мИмяРасшифровка);
		мКолонкаДеньРасшифровка = Элементы.Добавить("ТЗГрафикаРаботы_" + мИмяРасшифровка, Тип("ПолеФормы"), мГруппаКолонок); 				
		мКолонкаДеньРасшифровка.Вид = ВидПоляФормы.ПолеВвода;
		мКолонкаДеньРасшифровка.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		мКолонкаДеньРасшифровка.ТолькоПросмотр = Истина;
		мКолонкаДеньРасшифровка.Ширина = 10;
		мКолонкаДеньРасшифровка.РастягиватьПоГоризонтали = Ложь;
		//мКолонкаДеньРасшифровка.МногострочныйРежим = Истина;
		//мКолонкаДеньРасшифровка.АвтоПереносСтрок = Истина;						
	КонецЦикла;
	
	
	// Изменение реквизитов формы.
	
	МассивРеквизитов = Новый Массив;	
	Для Каждого текКолонка Из мТЗГрафикаРаботы.Колонки Цикл
	    МассивРеквизитов.Добавить(Новый РеквизитФормы(текКолонка.Имя, текКолонка.ТипЗначения, "ТЗГрафикаРаботы", текКолонка.Заголовок)); 		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивРеквизитов);
	
	
	// Добавление колонок в таблицу формы.
	
	Для Каждого текКолонка Из мТЗГрафикаРаботы.Колонки Цикл
		мНоваяКолонка = Элементы["ТЗГрафикаРаботы_" + текКолонка.Имя];
		мНоваяКолонка.ПутьКДанным = "ТЗГрафикаРаботы." + текКолонка.Имя;		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ВидимостьКолонокТЗГрафикаРаботы()
	
	Если ЗначениеЗаполнено(Объект.Год) И ЗначениеЗаполнено(Объект.Месяц) Тогда
		Попытка
			мДата = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, 1);
		Исключение
			Возврат;
		КонецПопытки;
		
		ПоследнийДень = День(КонецМесяца(мДата));
		
		// Установим видимость колонки, если в прошлом месяце они были скрыты
		Для Сч = 28 По ПоследнийДень Цикл
			мИмя = "День" + Строка(Сч);
			мИмяРасшифровка = "ДеньРасшифровка" + Строка(Сч);
			Элементы["ТЗГрафикаРаботы_" + мИмя].Видимость = Истина;
			Элементы["ТЗГрафикаРаботы_" + мИмяРасшифровка].Видимость = Истина;
		КонецЦикла;
		
		// Скроем лишние колонки месяца
		Для Сч = ПоследнийДень + 1 По 31 Цикл
			мИмя = "День" + Строка(Сч);
			мИмяРасшифровка = "ДеньРасшифровка" + Строка(Сч);
			Элементы["ТЗГрафикаРаботы_" + мИмя].Видимость = Ложь;
			Элементы["ТЗГрафикаРаботы_" + мИмяРасшифровка].Видимость = Ложь;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РаскраситьВыходныеДни()
		
	Для Сч = 1 По 31 Цикл
		Попытка
			мДата = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, Сч);
		Исключение
			Продолжить;
		КонецПопытки;
		
		мДеньНедели = ДеньНедели(мДата);
		мИмя = "День" + Строка(Сч);
		мИмяРасшифровка = "ДеньРасшифровка" + Строка(Сч);
		мЦветПоля = Элементы["ТЗГрафикаРаботы_Сотрудник"].ЦветФона;
		мЦветШапки = Элементы["ТЗГрафикаРаботы_Сотрудник"].ЦветФонаЗаголовка;
		
		Если мДеньНедели > 5 Тогда			
			Элементы["ТЗГрафикаРаботы_" + мИмя].ЦветФона = WebЦвета.ДымчатоБелый;
			Элементы["ТЗГрафикаРаботы_" + мИмя].ЦветФонаЗаголовка = WebЦвета.СветлоСерый;
			Элементы["ТЗГрафикаРаботы_" + мИмяРасшифровка].ЦветФона = WebЦвета.ДымчатоБелый;
			Элементы["ТЗГрафикаРаботы_" + мИмяРасшифровка].ЦветФонаЗаголовка = WebЦвета.СветлоСерый;
		Иначе
			Элементы["ТЗГрафикаРаботы_" + мИмя].ЦветФона = мЦветПоля;
			Элементы["ТЗГрафикаРаботы_" + мИмя].ЦветФонаЗаголовка = мЦветШапки;
			Элементы["ТЗГрафикаРаботы_" + мИмяРасшифровка].ЦветФона = мЦветПоля;
			Элементы["ТЗГрафикаРаботы_" + мИмяРасшифровка].ЦветФонаЗаголовка = мЦветШапки;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокСотрудников()
	
	ТЗГрафикаРаботы.Очистить();
	
	мПостроитель = Новый ПостроительОтчета;	
	мПостроитель.Текст = "ВЫБРАТЬ
	                     |	Пользователи.Ссылка КАК Сотрудник,
	                     |	Пользователи.атл_ПосменныйГрафикРаботы КАК Сменный,
	                     |	Пользователи.атл_ОсновнойГрафикРаботы КАК ГрафикОбслуживания,
	                     |	ИСТИНА КАК Пользователь1С,
	                     |	атл_НастройкиПодключенияМобильныхСотрудников.ЯвляетсяПользователемМК КАК ПользователемМК,
	                     |	Пользователи.атл_ОсновноеПодразделение КАК ОсновноеПодразделение
	                     |ПОМЕСТИТЬ ТаблицаИтого
	                     |ИЗ
	                     |	Справочник.Пользователи КАК Пользователи
	                     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.атл_НастройкиПодключенияМобильныхСотрудников КАК атл_НастройкиПодключенияМобильныхСотрудников
	                     |		ПО Пользователи.Ссылка = атл_НастройкиПодключенияМобильныхСотрудников.Пользователь
	                     |ГДЕ
	                     |	Пользователи.ПометкаУдаления = ЛОЖЬ
	                     |;
	                     |
	                     |////////////////////////////////////////////////////////////////////////////////
	                     |ВЫБРАТЬ
	                     |	ТаблицаИтого.Сотрудник,
	                     |	ТаблицаИтого.Сменный,
	                     |	ТаблицаИтого.ГрафикОбслуживания,
	                     |	ТаблицаИтого.Пользователь1С,
	                     |	ТаблицаИтого.ПользователемМК,
	                     |	ТаблицаИтого.ОсновноеПодразделение
	                     |{ВЫБРАТЬ
	                     |	Сотрудник.*,
	                     |	ОсновноеПодразделение.*}
	                     |ИЗ
	                     |	ТаблицаИтого КАК ТаблицаИтого
	                     |{ГДЕ
	                     |	ТаблицаИтого.Сотрудник.*,
	                     |	ТаблицаИтого.ОсновноеПодразделение.*}";

	Если Объект.ОтборСотрудников = 1 Тогда
		мПостроитель.Текст = СтрЗаменить(мПостроитель.Текст, "	ТаблицаИтого КАК ТаблицаИтого", "	ТаблицаИтого КАК ТаблицаИтого ГДЕ ТаблицаИтого.ПользователемМК = ЛОЖЬ");		
	ИначеЕсли Объект.ОтборСотрудников = 2 Тогда
		мПостроитель.Текст = СтрЗаменить(мПостроитель.Текст, "	ТаблицаИтого КАК ТаблицаИтого", "	ТаблицаИтого КАК ТаблицаИтого ГДЕ ТаблицаИтого.ПользователемМК = ИСТИНА");		
	КонецЕсли;
	
	Если НЕ АдресОтбораСпискаСотрудников = "" Тогда
		мОтборСотрудников = ПолучитьИзВременногоХранилища(АдресОтбораСпискаСотрудников);
		мОтборПостроителя = мПостроитель.Отбор;
		Для Каждого текОтбор Из мОтборСотрудников.Элементы Цикл
			Если текОтбор.Использование Тогда
				мНовыйОтбор = мОтборПостроителя.Добавить(текОтбор.ЛевоеЗначение );
				мНовыйОтбор.Использование = Истина;
				мНовыйОтбор.Значение = текОтбор.ПравоеЗначение;
				мНовыйОтбор.ВидСравнения = ПолучитьВидСравненияКомпоновкиДанных(текОтбор.ВидСравнения);				
			КонецЕсли;
		КонецЦикла;
		АдресОтбораСпискаСотрудников = ПоместитьВоВременноеХранилище(мОтборСотрудников, УникальныйИдентификатор);
	КонецЕсли;
		
	мПостроитель.Выполнить();
	мВыборка = мПостроитель.Результат.Выбрать();
	Пока мВыборка.Следующий() Цикл
		мНоваяСтрока = ТЗГрафикаРаботы.Добавить();
		мНоваяСтрока.Сотрудник = мВыборка.Сотрудник;
		мНоваяСтрока.Сменный = мВыборка.Сменный;
		мНоваяСтрока.ГрафикОбслуживания = мВыборка.ГрафикОбслуживания;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЗГрафикаРаботы()
	
	ЗаполнитьТаблицуГрафикРаботы();
	
	СнятьВсеФлажкиТЗГрафикаРаботы();
	
	Для Каждого текСтрока Из Объект.ГрафикРаботы Цикл
		текДень = День(текСтрока.День);
		мИмя = "День" + Строка(текДень);
		мИмяРасшифровка = "ДеньРасшифровка" + Строка(текДень);
		
		мНайденныеСтроки = ТЗГрафикаРаботы.НайтиСтроки(Новый Структура("Сотрудник", текСтрока.Сотрудник));
		Для Каждого мНайденная Из мНайденныеСтроки Цикл
			мНайденная[мИмя] = Истина;
			Если мНайденная[мИмяРасшифровка] <> "" Тогда
				мНайденная[мИмяРасшифровка] = мНайденная[мИмяРасшифровка] + ",  ";
			КонецЕсли;
			стрВремяНачало = ?(текСтрока.ВремяНачала = НачалоДня(текСтрока.День), "00:00", Формат(текСтрока.ВремяНачала, "ДФ=ЧЧ:mm"));
			стрВремяОкончания = ?(текСтрока.ВремяОкончания = НачалоДня(текСтрока.День), "23:59", Формат(текСтрока.ВремяОкончания, "ДФ=ЧЧ:mm"));
			мНайденная[мИмяРасшифровка] = мНайденная[мИмяРасшифровка] + стрВремяНачало + "-" + стрВремяОкончания;
		КонецЦикла;
	КонецЦикла;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуГрафикРаботы()
	
	Попытка
		мДата = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, 1);
	Исключение
		Возврат;
	КонецПопытки;
		
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	атл_ДетальныйГрафикРаботыСотрудников.Сотрудник,
	                |	атл_ДетальныйГрафикРаботыСотрудников.ВремяНачала,
	                |	атл_ДетальныйГрафикРаботыСотрудников.ВремяОкончания,
	                |	НАЧАЛОПЕРИОДА(атл_ДетальныйГрафикРаботыСотрудников.ВремяНачала, ДЕНЬ) КАК День
	                |ИЗ
	                |	РегистрСведений.атл_ДетальныйГрафикРаботыСотрудников КАК атл_ДетальныйГрафикРаботыСотрудников
	                |ГДЕ
	                |	атл_ДетальныйГрафикРаботыСотрудников.ВремяНачала >= &ДеньНачало
	                |	И атл_ДетальныйГрафикРаботыСотрудников.ВремяНачала <= &ДеньКонец
	                |	И атл_ДетальныйГрафикРаботыСотрудников.Сотрудник В(&СписокСотрудников)";
					
	мЗапрос.УстановитьПараметр("ДеньНачало", НачалоМесяца(мДата));
	мЗапрос.УстановитьПараметр("ДеньКонец", КонецМесяца(мДата));
	мЗапрос.УстановитьПараметр("СписокСотрудников", ТЗГрафикаРаботы.Выгрузить(,"Сотрудник"));
	мВыгрузка = мЗапрос.Выполнить().Выгрузить();
	
	Объект.ГрафикРаботы.Загрузить(мВыгрузка);
	Объект.ГрафикРаботы.Сортировать("Сотрудник, ВремяНачала");
	
КонецПроцедуры

&НаСервере
Процедура СнятьВсеФлажкиТЗГрафикаРаботы()
	
	Для Сч = 1 По 31 Цикл
		мИмя = "День" + Строка(Сч);
		мИмяРасшифровка = "ДеньРасшифровка" + Строка(Сч);
		Для Каждого текСтрока Из ТЗГрафикаРаботы Цикл
			текСтрока[мИмя] = Ложь;
			текСтрока[мИмяРасшифровка] = "";
		КонецЦикла;
	КонецЦикла;	
	
КонецПроцедуры


#КонецОбласти


#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ПредставлениеМесяцаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Если Модифицированность Тогда		
		мОповещение = Новый ОписаниеОповещения("ПредставлениеМесяцаРегулированиеФрагмент", ЭтотОбъект, Новый Структура("Направление", Направление));
		ПоказатьВопрос(мОповещение, "Данные были изменены и при обновлении будут утеряны. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ПредставлениеМесяцаРегулированиеЗавершение(Новый Структура("Направление", Направление));	
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеМесяцаПриИзменении(Элемент)
	
	Если Модифицированность Тогда
		мОповещение = Новый ОписаниеОповещения("ПредставлениеМесяцаПриИзмененииФрагмент", ЭтотОбъект);
		ПоказатьВопрос(мОповещение, "Данные были изменены и при обновлении будут утеряны. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ПредставлениеМесяцаПриИзмененииЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении(Элемент)
	
	Если Модифицированность Тогда
		мОповещение = Новый ОписаниеОповещения("ГодПриИзмененииФрагмент", ЭтотОбъект);
		ПоказатьВопрос(мОповещение, "Данные были изменены и при обновлении будут утеряны. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ГодПриИзмененииЗавершение();	
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ТЗГрафикаРаботыПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
	Колонка = Элемент.ТекущийЭлемент;
	Если Найти(Колонка.Имя, "День") > 0 Тогда
		ТЗГрафикаРаботыПриИзмененииНаСервере();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТЗГрафикаРаботыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Модифицированность = Истина;
	
	Колонка = Элемент.ТекущийЭлемент;
	Если Найти(Колонка.Имя, "ДеньРасшифровка") > 0 Тогда
		АдресТаблицыВремениРаботы = "";
		мДопПараметры = Новый Структура;
		
		ТЗГрафикаРаботыВыборНаСервере(АдресТаблицыВремениРаботы, мДопПараметры);
		
		мПараметры = Новый Структура;
		мПараметры.Вставить("АдресТаблицыВремениРаботы", АдресТаблицыВремениРаботы);
		мОповещение = Новый ОписаниеОповещения("ТЗГрафикаРаботыВыборНаСервереЗавершение", ЭтотОбъект, мДопПараметры);
		
		ОткрытьФорму("Обработка.атл_ЗаполнениеДетальногоГрафикаРаботыСотрудников.Форма.РедактированиеВремениРаботы", мПараметры, ЭтаФорма,,,, мОповещение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область КомандыФормы

&НаКлиенте
Процедура Отбор(Команда)
	
	Если Модифицированность Тогда
		мОповещение = Новый ОписаниеОповещения("ОтборФрагмент", ЭтотОбъект); 
		ПоказатьВопрос(мОповещение, "Данные были изменены и при обновлении будут утеряны. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Иначе
		ОтборЗавершение();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	мОповещение = Новый ОписаниеОповещения("ЗаписатьЗавершение", ЭтотОбъект); 
	ПоказатьВопрос(мОповещение, "Сохранить изменения?", РежимДиалогаВопрос.ДаНет);	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	Если Модифицированность Тогда		
		мОповещение = Новый ОписаниеОповещения("ОбновитьЗавершение", ЭтотОбъект); 
		ПоказатьВопрос(мОповещение, "Данные были изменены и при обновлении будут утеряны. Продолжить?", РежимДиалогаВопрос.ДаНет);		
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГрафикСотрудникаПоТекущейСтроке(Команда)
	
	мТекущиеДанные = Элементы.ТЗГрафикаРаботы.ТекущиеДанные;
	Если мТекущиеДанные.Сменный Тогда
		Модифицированность = Истина;
		ЗаполнитьПоСменномуГрафику(мТекущиеДанные.Сотрудник, мТекущиеДанные.ГрафикОбслуживания);
	Иначе
		Если ЗначениеЗаполнено(мТекущиеДанные.ГрафикОбслуживания) Тогда
			Модифицированность = Истина;
			ЗаполнитьПоГрафикуОбслуживания(мТекущиеДанные.Сотрудник, мТекущиеДанные.ГрафикОбслуживания);
		Иначе
			мГрафикКомпании = ПолучитьОсновнойГрафикОбслуживанияКомпании();
			Если ЗначениеЗаполнено(мГрафикКомпании) Тогда
				мДопПараметры = Новый Структура;
				мДопПараметры.Вставить("Сотрудник", мТекущиеДанные.Сотрудник);
				мДопПараметры.Вставить("ГрафикОбслуживания", мГрафикКомпании);
				мОповещение = Новый ОписаниеОповещения("ЗаполнитьГрафикСотрудникаПоТекущейСтрокеЗавершение", ЭтотОбъект, мДопПараметры);
				
				ПоказатьВопрос(мОповещение, "У сотрудника " + мТекущиеДанные.Сотрудник + " не указан ""Основной график работы"".
											|График будет заполнен по основному график обслуживания компании. Продолжить?", РежимДиалогаВопрос.ДаНет);	
			Иначе
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "У сотрудника " + мТекущиеДанные.Сотрудник + " и у компании не указан ""Основной график работы"".
									|Заполнение не возможно!";
				Сообщение.Сообщить();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГрафикиРаботающихНеПоСменам(Команда)
	
	ЗаполнитьГрафикиРаботающихНеПоСменамНаСервере();
	
КонецПроцедуры

#КонецОбласти


#Область ПроцедурыЗавершенияКомандИСобытий

&НаКлиенте
Процедура ОтборФрагмент(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда 
		ОтборЗавершение();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗавершение()
	
	мПараметры = Новый Структура;
	мПараметры.Вставить("ОтборСотрудников", Объект.ОтборСотрудников);
	мПараметры.Вставить("АдресОтбораСпискаСотрудников", АдресОтбораСпискаСотрудников);
	
	мОповещение = Новый ОписаниеОповещения("ОбработкаОтбора", ЭтотОбъект);
	ОткрытьФорму("Обработка.атл_ЗаполнениеДетальногоГрафикаРаботыСотрудников.Форма.Настройки", мПараметры, ЭтаФорма,,,, мОповещение);		
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаОтбора(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗакрытия) = Тип("Структура") Тогда		
		АдресОтбораСпискаСотрудников = РезультатЗакрытия.АдресОтборов;
		Объект.ОтборСотрудников = РезультатЗакрытия.ОтборСотрудников;
		ЗаполнитьСписокСотрудников();
		ЗаполнитьТЗГрафикаРаботы();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеМесяцаРегулированиеФрагмент(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		ПредставлениеМесяцаРегулированиеЗавершение(ДополнительныеПараметры);
	ИначеЕсли РезультатЗакрытия = КодВозвратаДиалога.Нет Тогда
		ПредставлениеМесяца = СписокМесяцев.НайтиПоИдентификатору(МесяцСтарый-1).Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПредставлениеМесяцаРегулированиеЗавершение(ДополнительныеПараметры)
		
	Если ДополнительныеПараметры.Направление = 1 Тогда
		Если Объект.Месяц = 12 Тогда
			Объект.Месяц = 1;
			Объект.Год = Объект.Год + 1;
		Иначе
			Объект.Месяц = Объект.Месяц + 1;
		КонецЕсли;
	ИначеЕсли ДополнительныеПараметры.Направление = -1 Тогда
		Если Объект.Месяц = 1 Тогда
			Объект.Месяц = 12;
			Объект.Год = Объект.Год - 1;
		Иначе
			Объект.Месяц = Объект.Месяц - 1;
		КонецЕсли;	
	КонецЕсли;
	ПредставлениеМесяца = СписокМесяцев.НайтиПоИдентификатору(Объект.Месяц-1).Значение;
	МесяцСтарый = Объект.Месяц;
	
	ВидимостьКолонокТЗГрафикаРаботы();
	РаскраситьВыходныеДни();
	ЗаполнитьТЗГрафикаРаботы();

КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеМесяцаПриИзмененииФрагмент(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		ПредставлениеМесяцаПриИзмененииЗавершение();
	ИначеЕсли РезультатЗакрытия = КодВозвратаДиалога.Нет Тогда
		ПредставлениеМесяца = СписокМесяцев.НайтиПоИдентификатору(МесяцСтарый-1).Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПредставлениеМесяцаПриИзмененииЗавершение()
		
	Объект.Месяц = СписокМесяцев.НайтиПоЗначению(ПредставлениеМесяца).ПолучитьИдентификатор() + 1;
	МесяцСтарый = Объект.Месяц;
		
	ВидимостьКолонокТЗГрафикаРаботы();
	РаскраситьВыходныеДни();
	ЗаполнитьТЗГрафикаРаботы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзмененииФрагмент(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		ГодПриИзмененииЗавершение();
	ИначеЕсли РезультатЗакрытия = КодВозвратаДиалога.Нет Тогда
		Объект.Год = ГодСтарый;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ГодПриИзмененииЗавершение()
		
	ГодСтарый = Объект.Год;

	ВидимостьКолонокТЗГрафикаРаботы();
	РаскраситьВыходныеДни();
	ЗаполнитьТЗГрафикаРаботы();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		ЗаписатьТаблицуВРегистр();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		ОбновитьНаСервере();
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьГрафикСотрудникаПоТекущейСтрокеЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт	
		
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		Модифицированность = Истина;
		ЗаполнитьПоГрафикуОбслуживания(ДополнительныеПараметры.Сотрудник, ДополнительныеПараметры.ГрафикОбслуживания);					
	КонецЕсли;
			
КонецПроцедуры

&НаСервере   
Процедура ЗаполнитьПоСменномуГрафикуЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатЗакрытия = Неопределено Тогда
		Сотрудник = ДополнительныеПараметры.Сотрудник;
		ГрафикОбслуживания = ДополнительныеПараметры.ГрафикОбслуживания;
		
		СтруктураОтбора = Новый Структура("ДеньНедели");
		МаксРабочих = РезультатЗакрытия.КоличествоРабочихДней;
		МаксВыходных = РезультатЗакрытия.КоличествоВыходных;
		ШагРаб = 0;
		ШагВых = 0;
		мСледДень = Дата("00010101");
		
		Если ПоследнийДень = Неопределено Тогда
			Попытка				
				мДата = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, 1);
			Исключение
				Возврат;
			КонецПопытки;			
			ПоследнийДень = День(КонецМесяца(мДата));				
		КонецЕсли;
						
		ОчиститьГрафикРаботыПоСотруднику(Сотрудник);
		Если ЗначениеЗаполнено(ГрафикОбслуживания) Тогда
			ТаблицаЗанятости = ГрафикОбслуживания.ТаблицаЗанятости;
		Иначе
			ТаблицаЗанятости = Константы.атл_ОсновнойГрафикОбслуживания.Получить().ТаблицаЗанятости;
		КонецЕсли;
		
		Для Сч = РезультатЗакрытия.ДеньНачала По ПоследнийДень Цикл						
			
			Если ШагРаб < МаксРабочих и ШагВых = 0 Тогда
				
				ШагРаб = ШагРаб + 1;
				
				Если ШагРаб = МаксРабочих и МаксВыходных = 0 Тогда
					
					ШагРаб = 0;
					
				КонецЕсли;			
				
				мТекущийДень = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, Сч);
				
				Если РезультатЗакрытия.ВремяРаботыИзГрафикаОбслуживания Тогда
					СтруктураОтбора.ДеньНедели = ПолучитьДеньНеделиПоДате(мТекущийДень);
					СтрокиШаблона = ТаблицаЗанятости.НайтиСтроки(СтруктураОтбора);
					Если НЕ СтрокиШаблона.Количество() > 0 Тогда
						Продолжить; // Если в графике нет расписания на этот день недели, значит сотрудник не работает в этот день.
					КонецЕсли;
					
					Для каждого СтрокаДанных ИЗ СтрокиШаблона Цикл
						
						ВремяС = СтрокаДанных.ВремяС;
						ВремяПо = СтрокаДанных.ВремяПо;
						
						Если ВремяС <> ВремяПо Тогда
							
							мНоваяСтрока = Объект.ГрафикРаботы.Добавить();
							мНоваяСтрока.Сотрудник = Сотрудник;
							мНоваяСтрока.День = мТекущийДень;
							
							мНоваяСтрока.ВремяНачала = мТекущийДень + Час(ВремяС)*3600 + Минута(ВремяС)*60 + Секунда(ВремяС);
							
							Если ВремяПо =  Дата("00010101000000") Тогда // Работает до 12 часов ночи.
								мНоваяСтрока.ВремяОкончания = КонецДня(мТекущийДень);
							ИначеЕсли ВремяПо < ВремяС Тогда
								мНоваяСтрока.ВремяОкончания = КонецДня(мТекущийДень);
								мСледДень = мТекущийДень + 86400;
								мНоваяСтрока2 = Объект.ГрафикРаботы.Добавить();
								мНоваяСтрока2.Сотрудник = Сотрудник;
								мНоваяСтрока2.День = мСледДень;
								мНоваяСтрока2.ВремяНачала = НачалоДня(мСледДень);
								мНоваяСтрока2.ВремяОкончания = мСледДень + Час(ВремяПо)*3600 + Минута(ВремяПо)*60 + Секунда(ВремяПо);					
							Иначе
								мНоваяСтрока.ВремяОкончания = мТекущийДень + Час(ВремяПо)*3600 + Минута(ВремяПо)*60 + Секунда(ВремяПо);					
							КонецЕсли;
						КонецЕсли;
						
					КонецЦикла;				
				Иначе
					ВремяС = РезультатЗакрытия.ВремяС;
					ВремяПо = РезультатЗакрытия.ВремяПо;
					
					Если ВремяС <> ВремяПо Тогда
						
						мНоваяСтрока = Объект.ГрафикРаботы.Добавить();
						мНоваяСтрока.Сотрудник = Сотрудник;
						мНоваяСтрока.День = мТекущийДень;
						
						мНоваяСтрока.ВремяНачала = мТекущийДень + Час(ВремяС)*3600 + Минута(ВремяС)*60 + Секунда(ВремяС);
						
						Если ВремяПо =  Дата("00010101000000") Тогда // Работает до 12 часов ночи.
							мНоваяСтрока.ВремяОкончания = КонецДня(мТекущийДень);
						ИначеЕсли ВремяПо < ВремяС Тогда
							мНоваяСтрока.ВремяОкончания = КонецДня(мТекущийДень);
							мСледДень = мТекущийДень + 86400;
							мНоваяСтрока2 = Объект.ГрафикРаботы.Добавить();
							мНоваяСтрока2.Сотрудник = Сотрудник;
							мНоваяСтрока2.День = мСледДень;
							мНоваяСтрока2.ВремяНачала = НачалоДня(мСледДень);
							мНоваяСтрока2.ВремяОкончания = мСледДень + Час(ВремяПо)*3600 + Минута(ВремяПо)*60 + Секунда(ВремяПо);					
						Иначе
							мНоваяСтрока.ВремяОкончания = мТекущийДень + Час(ВремяПо)*3600 + Минута(ВремяПо)*60 + Секунда(ВремяПо);					
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;			
				
			ИначеЕсли ШагРаб = МаксРабочих и ШагВых < МаксВыходных Тогда
				
				ШагВых = ШагВых + 1;
				
				Если ШагВых = МаксВыходных Тогда
					ШагРаб = 0;
					ШагВых = 0;
				КонецЕсли;			
				
			КонецЕсли;
			
		КонецЦикла;
		
			
		ОбновитьИнформациюПоСотрудникуВТЗГрафикаРаботы(Сотрудник);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТЗГрафикаРаботыВыборНаСервереЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
		
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		мТаблицаВремениРаботы = ПолучитьИзВременногоХранилища(РезультатЗакрытия);
		мНайденныеСтроки = Объект.ГрафикРаботы.НайтиСтроки(Новый Структура("День, Сотрудник", ДополнительныеПараметры.День, ДополнительныеПараметры.Сотрудник));
		мТекущиеДанные = ТЗГрафикаРаботы.НайтиПоИдентификатору(ДополнительныеПараметры.ИдентификаторСтроки);
		
		Для Каждого тек Из мНайденныеСтроки	Цикл
			Объект.ГрафикРаботы.Удалить(тек);
		КонецЦикла;
		
		Для Каждого текСтрокаВремени Из мТаблицаВремениРаботы Цикл
			мНоваяСтрока = Объект.ГрафикРаботы.Добавить();
			мНоваяСтрока.Сотрудник = ДополнительныеПараметры.Сотрудник;
			мНоваяСтрока.День = ДополнительныеПараметры.День;
			мНоваяСтрока.ВремяНачала = ДополнительныеПараметры.День + Формат(текСтрокаВремени.ВремяС, "ДФ=ЧЧ; ДП=0") * 3600 + Формат(текСтрокаВремени.ВремяС, "ДФ=мм; ДП=0") * 60 + Формат(текСтрокаВремени.ВремяС, "ДФ=сс; ДП=0");
			мНоваяСтрока.ВремяОкончания = ДополнительныеПараметры.День + Формат(текСтрокаВремени.ВремяПо, "ДФ=ЧЧ; ДП=0") * 3600 + Формат(текСтрокаВремени.ВремяПо, "ДФ=мм; ДП=0") * 60 + Формат(текСтрокаВремени.ВремяПо, "ДФ=сс; ДП=0");
		КонецЦикла;
		
		ОбновитьДанныеЗаДеньВТЗГрафикРаботы(мТекущиеДанные, Число(ДополнительныеПараметры.ДеньСтрока), ДополнительныеПараметры.Сотрудник);  		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
			
	Если РезультатЗакрытия = КодВозвратаДиалога.Да Тогда
		ЗаписатьТаблицуВРегистр();
		Модифицированность = Ложь;
		Закрыть();
	ИначеЕсли РезультатЗакрытия = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти


#Область ПрочиеПроцедураИФункции

&НаСервере
Процедура ЗаполнитьЗначенияПоУмолчанию()
	
	Объект.Месяц = Месяц(ТекущаяДата());
	Объект.Год = Год(ТекущаяДата());	
	ПредставлениеМесяца = СписокМесяцев.НайтиПоИдентификатору(Объект.Месяц-1).Значение;
	
	Объект.ОтборСотрудников = 2;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокМесяцев()
	
	СписокМесяцев.Добавить("Январь");
	СписокМесяцев.Добавить("Февраль");
	СписокМесяцев.Добавить("Март");
	СписокМесяцев.Добавить("Апрель");
	СписокМесяцев.Добавить("Май");
	СписокМесяцев.Добавить("Июнь");
	СписокМесяцев.Добавить("Июль");
	СписокМесяцев.Добавить("Август");
	СписокМесяцев.Добавить("Сентябрь");
	СписокМесяцев.Добавить("Октябрь");
	СписокМесяцев.Добавить("Ноябрь");
	СписокМесяцев.Добавить("Декабрь");	
	
	мСписокВыбора = Элементы.ПредставлениеМесяца.СписокВыбора;
	мСписокВыбора.ЗагрузитьЗначения(СписокМесяцев.ВыгрузитьЗначения());
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьДатуПоПараметрам(мГод, мМесяц, мДень)
	
	Возврат Дата(ПреобразоватьЧислоВСтроку(мГод, 4), ПреобразоватьЧислоВСтроку(мМесяц, 2), ПреобразоватьЧислоВСтроку(мДень, 2));
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПреобразоватьЧислоВСтроку(ИсходноеЧисло, КоличествоРазрядов)
	
	мПолученнаяСтрока = СтрЗаменить(Строка(ИсходноеЧисло), Символы.НПП, "");
	мДобавитьНулей = КоличествоРазрядов - СтрДлина(мПолученнаяСтрока);
	Если мДобавитьНулей = 0 Тогда
		Возврат мПолученнаяСтрока;
	ИначеЕсли мДобавитьНулей = 1 Тогда
		Возврат "0" + мПолученнаяСтрока;
	ИначеЕсли мДобавитьНулей = 2 Тогда
		Возврат "00" + мПолученнаяСтрока;
	ИначеЕсли мДобавитьНулей = 3 Тогда
		Возврат "000" + мПолученнаяСтрока;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВидСравненияКомпоновкиДанных(ВидСравненияОтбора)
	
	Если ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Равно Тогда
		Возврат ВидСравнения.Равно;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Больше Тогда
		Возврат ВидСравнения.Больше;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда
		Возврат ВидСравнения.БольшеИлиРавно;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.ВИерархии Тогда
		Возврат ВидСравнения.ВИерархии;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.ВСписке Тогда
		Возврат ВидСравнения.ВСписке;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
		Возврат ВидСравнения.ВСпискеПоИерархии;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Меньше Тогда
		Возврат ВидСравнения.Меньше;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда
		Возврат ВидСравнения.МеньшеИлиРавно;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.НеВИерархии Тогда
		Возврат ВидСравнения.НеВИерархии;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
		Возврат ВидСравнения.НеВСписке;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии Тогда
		Возврат ВидСравнения.НеВСпискеПоИерархии;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.НеРавно Тогда
		Возврат ВидСравнения.НеРавно;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.НеСодержит Тогда
		Возврат ВидСравнения.НеСодержит;
	ИначеЕсли ВидСравненияОтбора = ВидСравненияКомпоновкиДанных.Содержит Тогда
		Возврат ВидСравнения.Содержит;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаписатьТаблицуВРегистр()
	
	мДата = Неопределено;
	
	НачатьТранзакцию();	
	
	Если ПоследнийДень = 0 Тогда
		
		Попытка				
			мДата = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, 1);
		Исключение
			Возврат;
		КонецПопытки;
		
		ПоследнийДень = День(КонецМесяца(мДата));				
	ИначеЕсли мДата = Неопределено Тогда
		
		Попытка				
			мДата = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, 1);
		Исключение
			Возврат;
		КонецПопытки;
		
	КонецЕсли;
	
	//сначала удалим старые записи
	ТаблицаОбрабатываемыхСотрудников = Объект.ГрафикРаботы.Выгрузить();
	ТаблицаОбрабатываемыхСотрудников.Свернуть("Сотрудник");
	МассивСотрудников = ТаблицаОбрабатываемыхСотрудников.ВыгрузитьКолонку("Сотрудник");
	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	атл_ДетальныйГрафикРаботыСотрудников.Сотрудник,
	                |	атл_ДетальныйГрафикРаботыСотрудников.ВремяНачала
	                |ИЗ
	                |	РегистрСведений.атл_ДетальныйГрафикРаботыСотрудников КАК атл_ДетальныйГрафикРаботыСотрудников
	                |ГДЕ
	                |	атл_ДетальныйГрафикРаботыСотрудников.ВремяНачала МЕЖДУ &ВремяНачала И &ВремяОкончания
	                |	И атл_ДетальныйГрафикРаботыСотрудников.Сотрудник В(&МассивСотрудников)";
	
	мЗапрос.УстановитьПараметр("МассивСотрудников", МассивСотрудников);
	мЗапрос.УстановитьПараметр("ВремяНачала", 		НачалоМесяца(мДата));
	мЗапрос.УстановитьПараметр("ВремяОкончания", 	КонецМесяца(мДата));
	
	
	ВыборкаЗапроса = мЗапрос.Выполнить().Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		МенеджерЗаписи = РегистрыСведений.атл_ДетальныйГрафикРаботыСотрудников.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ВремяНачала = ВыборкаЗапроса.ВремяНачала;
		МенеджерЗаписи.Сотрудник = ВыборкаЗапроса.Сотрудник;
		МенеджерЗаписи.Прочитать();
		МенеджерЗаписи.Удалить();
	КонецЦикла;
	
	Для Каждого текСтрока Из Объект.ГрафикРаботы Цикл
		
		МенеджерЗаписи = РегистрыСведений.атл_ДетальныйГрафикРаботыСотрудников.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Сотрудник 	  = текСтрока.Сотрудник;
		МенеджерЗаписи.ВремяНачала 	  = текСтрока.ВремяНачала;
		МенеджерЗаписи.ВремяОкончания = текСтрока.ВремяОкончания;
		МенеджерЗаписи.ДатаЗаписи	  = ТекущаяДата();
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
	//проверяем редактируемый период
	//Если период - текущий, либо следующий месяц, то формируем запись в регистре Пакет на отправку с целью отправки расписания сотруднику. 
	//Если запись по каким то причинам не сформируется, то она в любом случае будет выгружена на следующий день	
	ТекущаяДатаДляПроверки = ТекущаяДата();
	Если ТекущаяДатаДляПроверки > мДата - 8 * 86400 и ТекущаяДатаДляПроверки <= КонецМесяца(мДата) Тогда
		Для Каждого СотрудникИзМассива из МассивСотрудников Цикл
			атл_УправлениеМобильнымиСотрудниками.ОтправитьРасписаниеМобильномуСотруднику(СотрудникИзМассива);
		КонецЦикла;
	КонецЕсли;
	
	Попытка
		ЗафиксироватьТранзакцию();		
		Модифицированность = Ложь;
		ЗаписаноВРегистр = Истина;
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось записать данные! Не удалось зафиксировать транзакцию!" +
							Символы.ПС + "Возникла ошибка при записи данных! " + ОписаниеОшибки();
		Сообщение.Сообщить();				
	КонецПопытки; 
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	ВидимостьКолонокТЗГрафикаРаботы();
	РаскраситьВыходныеДни();
		
	ЗаполнитьСписокСотрудников();
	ЗаполнитьТЗГрафикаРаботы();

КонецПроцедуры

&НаСервере
Процедура ТЗГрафикаРаботыПриИзмененииНаСервере()
	
	Колонка = Элементы.ТЗГрафикаРаботы.ТекущийЭлемент;
	ИмяКолонкиДанных = СтрЗаменить(Колонка.Имя, "ТЗГрафикаРаботы_", "");
	стрДень = СтрЗаменить(Колонка.Имя, "ТЗГрафикаРаботы_День", "");
	мТекущийДень = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, стрДень);
	
	мТекущиеДанные = ТЗГрафикаРаботы.НайтиПоИдентификатору(Элементы.ТЗГрафикаРаботы.ТекущаяСтрока);
	Если мТекущиеДанные[ИмяКолонкиДанных] = Ложь Тогда
		мНайденныеСтроки = Объект.ГрафикРаботы.НайтиСтроки(Новый Структура("День, Сотрудник", мТекущийДень, мТекущиеДанные.Сотрудник));
		Для Каждого тек Из мНайденныеСтроки Цикл
			Объект.ГрафикРаботы.Удалить(тек);
		КонецЦикла;
		ОбновитьДанныеЗаДеньВТЗГрафикРаботы(мТекущиеДанные, Число(стрДень), мТекущиеДанные.Сотрудник);
	Иначе
		
		ТаблицаЗанятости = Неопределено;		
		Если ЗначениеЗаполнено(мТекущиеДанные.Сотрудник.атл_ОсновнойГрафикРаботы) Тогда
			ТаблицаЗанятости = мТекущиеДанные.Сотрудник.атл_ОсновнойГрафикРаботы.ТаблицаЗанятости;
		Иначе
			ТаблицаЗанятости = Константы.атл_ОсновнойГрафикОбслуживания.Получить().ТаблицаЗанятости;
		КонецЕсли;
		
		Если Не ТаблицаЗанятости = Неопределено Тогда
			СтруктураОтбора = Новый Структура("ДеньНедели");
			СтруктураОтбора.ДеньНедели = ПолучитьДеньНеделиПоДате(мТекущийДень);
			СтрокиШаблона = ТаблицаЗанятости.НайтиСтроки(СтруктураОтбора);
			Если СтрокиШаблона.Количество() > 0 Тогда
				мНоваяСтрока = Объект.ГрафикРаботы.Добавить();
				мНоваяСтрока.Сотрудник = мТекущиеДанные.Сотрудник;
				мНоваяСтрока.День = мТекущийДень;
				
				ВремяС = СтрокиШаблона[0].ВремяС;
				ВремяПо = СтрокиШаблона[0].ВремяПо;
				мСледДень = Неопределено;
				
				мНоваяСтрока.ВремяНачала = мТекущийДень + Час(ВремяС)*3600 + Минута(ВремяС)*60 + Секунда(ВремяС);
				Если ВремяПо =  Дата("00010101000000") Тогда // Работает до 12 часов ночи.
					мНоваяСтрока.ВремяОкончания = КонецДня(мТекущийДень);
				ИначеЕсли ВремяПо < ВремяС Тогда									
					мНоваяСтрока.ВремяОкончания = КонецДня(мТекущийДень);
					мСледДень = мТекущийДень + 86400;
					мНоваяСтрока2 = Объект.ГрафикРаботы.Добавить();
					мНоваяСтрока2.Сотрудник = мТекущиеДанные.Сотрудник;
					мНоваяСтрока2.День = мСледДень;
					мНоваяСтрока2.ВремяНачала = НачалоДня(мСледДень);
					мНоваяСтрока2.ВремяОкончания = мСледДень + Час(ВремяПо)*3600 + Минута(ВремяПо)*60 + Секунда(ВремяПо);					
				Иначе
					мНоваяСтрока.ВремяОкончания = мТекущийДень + Час(ВремяПо)*3600 + Минута(ВремяПо)*60 + Секунда(ВремяПо);					
				КонецЕсли;

				ОбновитьДанныеЗаДеньВТЗГрафикРаботы(мТекущиеДанные, Число(стрДень), мТекущиеДанные.Сотрудник);
				Если НЕ мСледДень = Неопределено Тогда
					ОбновитьДанныеЗаДеньВТЗГрафикРаботы(мТекущиеДанные, День(мСледДень), мТекущиеДанные.Сотрудник);
				КонецЕсли;
				
			Иначе
				//нужного дня нет, ничего не заполняем...
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеЗаДеньВТЗГрафикРаботы(ТекущиеДанные, Сч, Сотрудник)
	
	мТекущийДень = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, Сч);
	
	мНайденныеСтроки = Объект.ГрафикРаботы.НайтиСтроки(Новый Структура("Сотрудник, День", Сотрудник, мТекущийДень));						
	Если мНайденныеСтроки.Количество() > 0 Тогда
		стрРасшифровки = "";
		Для Каждого мНайденная Из мНайденныеСтроки Цикл
			Если мНайденная.ВремяНачала = НачалоДня(мТекущийДень) Тогда
				стрВремяНачало = "00:00";
			Иначе
				стрВремяНачало = Формат(мНайденная.ВремяНачала, "ДФ=ЧЧ:mm");
			КонецЕсли;
			
			Если мНайденная.ВремяОкончания = НачалоДня(мТекущийДень) Тогда
				стрВремяОкончания = "23:59";
			Иначе
				стрВремяОкончания = Формат(мНайденная.ВремяОкончания, "ДФ=ЧЧ:mm");
			КонецЕсли;
			стрРасшифровки = стрРасшифровки + стрВремяНачало + "-" + стрВремяОкончания + ",  ";			
		КонецЦикла;
		стрРасшифровки = Лев(стрРасшифровки, СтрДлина(стрРасшифровки) - 3);
		ТекущиеДанные["День" + Строка(Сч)] = Истина;
		ТекущиеДанные["ДеньРасшифровка" + Строка(Сч)] = стрРасшифровки;
	Иначе
		ТекущиеДанные["День" + Строка(Сч)] = Ложь;
		ТекущиеДанные["ДеньРасшифровка" + Строка(Сч)] = "";	
	КонецЕсли;
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДеньНеделиПоДате(ТекДата)
	
	ДеньНеделиЧисло = ДеньНедели(ТекДата);
	Если ДеньНеделиЧисло = 1 Тогда
		Возврат Перечисления.ДниНедели.Понедельник;
	ИначеЕсли ДеньНеделиЧисло = 2 Тогда
		Возврат Перечисления.ДниНедели.Вторник;
	ИначеЕсли ДеньНеделиЧисло = 3 Тогда
		Возврат Перечисления.ДниНедели.Среда;
	ИначеЕсли ДеньНеделиЧисло = 4 Тогда
		Возврат Перечисления.ДниНедели.Четверг;
	ИначеЕсли ДеньНеделиЧисло = 5 Тогда
		Возврат Перечисления.ДниНедели.Пятница;
	ИначеЕсли ДеньНеделиЧисло = 6 Тогда
		Возврат Перечисления.ДниНедели.Суббота;
	ИначеЕсли ДеньНеделиЧисло = 7 Тогда
		Возврат Перечисления.ДниНедели.Воскресенье;
	КонецЕсли;
	
	Возврат Перечисления.ДниНедели.ПустаяСсылка();
	
КонецФункции

&НаСервере
Процедура ТЗГрафикаРаботыВыборНаСервере(АдресТаблицыВремениРаботы, ДопПараметры)
	
	Объект.ТаблицаВремениРаботы.Очистить();
	
	стрДень = СтрЗаменить(Элементы.ТЗГрафикаРаботы.ТекущийЭлемент.Имя, "ТЗГрафикаРаботы_ДеньРасшифровка", ""); 
	мТекущийДень = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, стрДень);
	
	мТекущиеДанные = ТЗГрафикаРаботы.НайтиПоИдентификатору(Элементы.ТЗГрафикаРаботы.ТекущаяСтрока);
	мНайденныеСтроки = Объект.ГрафикРаботы.НайтиСтроки(Новый Структура("День, Сотрудник", мТекущийДень, мТекущиеДанные.Сотрудник));
	
	Для Каждого мНайденная Из мНайденныеСтроки Цикл
		мНоваяСтрока = Объект.ТаблицаВремениРаботы.Добавить();
		мНоваяСтрока.ВремяС = мНайденная.ВремяНачала;
		мНоваяСтрока.ВремяПо = мНайденная.ВремяОкончания;		
	КонецЦикла;
	
	АдресТаблицыВремениРаботы = ПоместитьВоВременноеХранилище(Объект.ТаблицаВремениРаботы.Выгрузить());
	ДопПараметры.Вставить("День", мТекущийДень);
	ДопПараметры.Вставить("Сотрудник", мТекущиеДанные.Сотрудник);
	ДопПараметры.Вставить("ИдентификаторСтроки", Элементы.ТЗГрафикаРаботы.ТекущаяСтрока);
	ДопПараметры.Вставить("ДеньСтрока", стрДень);
	
КонецПроцедуры

&НаКлиенте  
Процедура ЗаполнитьПоСменномуГрафику(Сотрудник, ГрафикОбслуживания)
	
	Модифицированность = Истина;
	
	мПараметры = Новый Структура;
	мПараметры.Вставить("ДеньНачала", 1);
	мПараметры.Вставить("ГрафикОбслуживания", ГрафикОбслуживания);
	
	мОповещение = Новый ОписаниеОповещения("ЗаполнитьПоСменномуГрафикуЗавершение", ЭтотОбъект, Новый Структура("Сотрудник, ГрафикОбслуживания", Сотрудник, ГрафикОбслуживания));
	ОткрытьФорму("Обработка.атл_ЗаполнениеДетальногоГрафикаРаботыСотрудников.Форма.ЗаполнениеПоСменномуГрафику", мПараметры, ЭтаФорма,,,, мОповещение);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоГрафикуОбслуживания(Сотрудник, ГрафикОбслуживания)
	
	Если ПоследнийДень = Неопределено Тогда
		Попытка				
			мДата = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, 1);
		Исключение
			Возврат;
		КонецПопытки;
		
		ПоследнийДень = День(КонецМесяца(мДата));				
	КонецЕсли;
	
	ОчиститьГрафикРаботыПоСотруднику(Сотрудник);
	
	ТаблицаЗанятости = ГрафикОбслуживания.ТаблицаЗанятости;
	СтруктураОтбора = Новый Структура("ДеньНедели");
	Для Сч = 1 По ПоследнийДень Цикл
		мТекущийДень = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, Сч);
		
		СтруктураОтбора.ДеньНедели = ПолучитьДеньНеделиПоДате(мТекущийДень);
		СтрокиШаблона = ТаблицаЗанятости.НайтиСтроки(СтруктураОтбора);
		Для каждого СтрокаДанных ИЗ СтрокиШаблона Цикл
			мНоваяСтрока = Объект.ГрафикРаботы.Добавить();
			мНоваяСтрока.Сотрудник = Сотрудник;
			мНоваяСтрока.День = мТекущийДень;			
			мНоваяСтрока.ВремяНачала = мТекущийДень + Час(СтрокаДанных.ВремяС)*3600 + Минута(СтрокаДанных.ВремяС)*60 + Секунда(СтрокаДанных.ВремяС);
			мНоваяСтрока.ВремяОкончания = мТекущийДень + Час(СтрокаДанных.ВремяПо)*3600 + Минута(СтрокаДанных.ВремяПо)*60 + Секунда(СтрокаДанных.ВремяПо);			
		КонецЦикла;
	КонецЦикла;
	
	ОбновитьИнформациюПоСотрудникуВТЗГрафикаРаботы(Сотрудник);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОсновнойГрафикОбслуживанияКомпании()
	
	Возврат Константы.атл_ОсновнойГрафикОбслуживания.Получить();
	
КонецФункции

&НаСервере
Процедура ОбновитьИнформациюПоСотрудникуВТЗГрафикаРаботы(Сотрудник)	
	
	мНайденныеСтроки = ТЗГрафикаРаботы.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
	Если мНайденныеСтроки.Количество() > 0 Тогда
		мТекущиеДанные = мНайденныеСтроки[0];
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ПоследнийДень = Неопределено Тогда
		Попытка				
			мДата = ПолучитьДатуПоПараметрам(Объект.Год, Объект.Месяц, 1);
		Исключение
			Возврат;
		КонецПопытки;
		
		ПоследнийДень = День(КонецМесяца(мДата));				
	КонецЕсли;
	
	Для Сч = 1 По ПоследнийДень Цикл						
		ОбновитьДанныеЗаДеньВТЗГрафикРаботы(мТекущиеДанные, Сч, Сотрудник);				
	КонецЦикла;			
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьГрафикРаботыПоСотруднику(Сотрудник)
	
	мНайденныеСтроки = Объект.ГрафикРаботы.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
	Для Каждого тек Из мНайденныеСтроки Цикл
		Объект.ГрафикРаботы.Удалить(тек);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГрафикиРаботающихНеПоСменамНаСервере()
	
	Для Каждого СотрудникТаблицы Из ТЗГрафикаРаботы Цикл
		
		мТекущийСотрудник = СотрудникТаблицы.Сотрудник;
		Если СотрудникТаблицы.Сменный Тогда
			Продолжить;
		КонецЕсли;
		
		Модифицированность = Истина;
		
		Если ЗначениеЗаполнено(мТекущийСотрудник.атл_ОсновнойГрафикРаботы) Тогда
			ЗаполнитьПоГрафикуОбслуживания(мТекущийСотрудник, мТекущийСотрудник.атл_ОсновнойГрафикРаботы);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
