
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаписьНастроекПодключения = РегистрыСведений.атл_НастройкиПодсистемыУМС.СоздатьМенеджерЗаписи();
	ЗаписьНастроекПодключения.Прочитать();
	
	ПериодичностьСинхронизацииССервером = ЗаписьНастроекПодключения.ПериодичностьСинхронизацииССервером;		
	
	ПроверитьХодОбменаНаСервере();
	ПроверитьНаличиеОшибокНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПериодичностьСинхронизацииССервером < 15 Тогда
		ПериодичностьСинхронизацииССервером = 15;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ПроверитьХодОбмена", ПериодичностьСинхронизацииССервером);
	ПодключитьОбработчикОжидания("ПроверитьНаличиеОшибок", 300); //каждые пять минут

	Если АктивироватьФорму Тогда
		ЭтаФорма.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОтключитьОбработчикОжидания("ПроверитьХодОбмена");
	ОтключитьОбработчикОжидания("ПроверитьНаличиеОшибок");
	
КонецПроцедуры


#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ИнформацияОбОшибкахОбменаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаРегистраЛогов =  ПолучитьФорму("РегистрСведений.атл_ЛогиОбменаУМС.ФормаСписка");		
	мОтбор = ФормаРегистраЛогов.Список.Отбор.Элементы;
	мОтбор.Очистить();
	
	мНовыйОтбор = мОтбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	мНовыйОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаСоздания");
	мНовыйОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	мНовыйОтбор.ПравоеЗначение = НачалоДня(ТекущаяДата());
	мНовыйОтбор.Использование = Истина;	
	
	ФормаРегистраЛогов.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ПроверитьХодОбмена();
	ПроверитьНаличиеОшибок();	
	
КонецПроцедуры

#КонецОбласти



#Область ПрочиеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьХодОбмена()
	
	АктивироватьФорму = Ложь;
	ПроверитьХодОбменаНаСервере();	
	Если АктивироватьФорму Тогда
		ЭтаФорма.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаличиеОшибок()
	
	АктивироватьФорму = Ложь;
	ПроверитьНаличиеОшибокНаСервере();
	Если АктивироватьФорму Тогда
		ЭтаФорма.Активизировать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьХодОбменаНаСервере()

	//считываем параметры из данных о синхронизации
	мЗаписьПараметровСинхронизацииССервером = РегистрыСведений.атл_ПеременныеСинхронизацииССерверомУМС.СоздатьМенеджерЗаписи();
	мЗаписьПараметровСинхронизацииССервером.Прочитать();
	Объект.ДатаПоследнегоУспешногоОбмена = мЗаписьПараметровСинхронизацииССервером.ДатаПоследнегоУспешногоОбмена;
	Объект.ДатаПоследнейПопыткиОбмена = мЗаписьПараметровСинхронизацииССервером.ДатаПоследнейПопыткиОбмена;
	
	Если ЗначениеЗаполнено(Объект.ДатаПоследнегоУспешногоОбмена) Тогда
		Если ЗначениеЗаполнено(Объект.ДатаПоследнейПопыткиОбмена) Тогда
			Если Объект.ДатаПоследнегоУспешногоОбмена = Объект.ДатаПоследнейПопыткиОбмена Тогда
				Объект.ИнформацияОХодеОбмена = "Дата последнего успешного обмена: " + Объект.ДатаПоследнегоУспешногоОбмена;
			Иначе
				Объект.ИнформацияОХодеОбмена = "Дата последнего успешного обмена: " + Объект.ДатаПоследнегоУспешногоОбмена + Символы.ПС + 
										"Дата последней попытки обмена: " + Объект.ДатаПоследнейПопыткиОбмена;
			КонецЕсли;
		Иначе
			Объект.ИнформацияОХодеОбмена = "Дата последнего успешного обмена: " + Объект.ДатаПоследнегоУспешногоОбмена + Символы.ПС + 
									"Дата последней попытки обмена: " + Объект.ДатаПоследнейПопыткиОбмена;
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Объект.ДатаПоследнейПопыткиОбмена) Тогда
			Объект.ИнформацияОХодеОбмена = "Успешного обмена не было...." + Символы.ПС + 
								"Дата последней попытки обмена: " + Объект.ДатаПоследнейПопыткиОбмена;
		Иначе
			Объект.ИнформацияОХодеОбмена = "Успешного обмена не было...." + Символы.ПС + 
								"Попыток обмена не было...";
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущаяПроверяемаяДата = ТекущаяДата();
	
	Если Объект.ТекущийСтатусОбмена = "" Тогда
		ОтобразитьИзменениеСтатусаОбмена = Истина;
	Иначе
		ОтобразитьИзменениеСтатусаОбмена = Ложь;	
	КонецЕсли;
	
	Если ТекущаяПроверяемаяДата < Объект.ДатаПоследнегоУспешногоОбмена + 8 * ПериодичностьСинхронизацииССервером Тогда
		//обмен нормально работает
		Если Объект.ОбменУспешноРаботает Тогда
			//все хорошо
		Иначе
			ОтобразитьИзменениеСтатусаОбмена = Истина;	
			
			Объект.ОбменЗапущен = Истина;
			Объект.ОбменУспешноРаботает = Истина;
		КонецЕсли;
	Иначе
		//обмен не работает
		Если ТекущаяПроверяемаяДата < Объект.ДатаПоследнейПопыткиОбмена + 8 * ПериодичностьСинхронизацииССервером Тогда
			//но пытается работать
			Если Не Объект.ОбменЗапущен или Объект.ОбменУспешноРаботает Тогда
				ОтобразитьИзменениеСтатусаОбмена = Истина;	
				
				Объект.ОбменЗапущен = Истина;
				Объект.ОбменУспешноРаботает = Ложь;
			Иначе
				//ничего не менялось. Обмен запущен и не работает
			КонецЕсли;
		Иначе
			//видимо даже не запущена обработка или регламентное задание
			Если Объект.ОбменЗапущен или Объект.ОбменУспешноРаботает Тогда
				ОтобразитьИзменениеСтатусаОбмена = Истина;	
				
				Объект.ОбменЗапущен = Ложь;
				Объект.ОбменУспешноРаботает = Ложь;
			Иначе
				//ничего не менялось. Обмен не запущен и не работает
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ОтобразитьИзменениеСтатусаОбмена Тогда
		Если Объект.ОбменУспешноРаботает Тогда
			Объект.ТекущийСтатусОбмена = "Обмен данными запущен и успешно работает";
			ЦветСтатуса = Новый Цвет(46,139,87);
			ЭтаФорма.Заголовок = "Обмен с мобильными сотрудниками";
		ИначеЕсли Не Объект.ОбменУспешноРаботает и Объект.ОбменЗапущен Тогда
			Объект.ТекущийСтатусОбмена = "ВНИМАНИЕ! Обмен данными запущен, но НЕ РАБОТАЕТ!";
			ЦветСтатуса = Новый Цвет(255,0,0);
			ЭтаФорма.Заголовок = "ВНИМАНИЕ! Обмен с мобильными сотрудниками";
		ИначеЕсли Не Объект.ОбменУспешноРаботает и Не Объект.ОбменЗапущен Тогда
			Объект.ТекущийСтатусОбмена = "ВНИМАНИЕ! Обмен данными НЕ ЗАПУЩЕН!";
			ЦветСтатуса = Новый Цвет(255,0,0);
			ЭтаФорма.Заголовок = "ВНИМАНИЕ! Обмен с мобильными сотрудниками";
		Иначе
			ЦветСтатуса = Новый Цвет(0,0,0);
		КонецЕсли;
				
		Элементы.ТекущийСтатусОбмена.ЦветТекста = ЦветСтатуса;		
		АктивироватьФорму = Истина;
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ПроверитьНаличиеОшибокНаСервере()

	ТекущаяПроверяемаяДата = ТекущаяДата();
	
	мСписокВидовЛогов = Новый СписокЗначений;
	мСписокВидовЛогов.Добавить(Перечисления.атл_ВидыЛогов.ОшибкаПодключенияКСерверу);
	мСписокВидовЛогов.Добавить(Перечисления.атл_ВидыЛогов.ОшибкаРазбораДанных);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	атл_ЛогиОбменаУМС.ИдентификаторЛога
	|ИЗ
	|	РегистрСведений.атл_ЛогиОбменаУМС КАК атл_ЛогиОбменаУМС
	|ГДЕ
	|	атл_ЛогиОбменаУМС.ВидЛога В(&СписокВидовЛогов)
	|	И атл_ЛогиОбменаУМС.ДатаСоздания >= &НачальнаяДатаСоздания";
	
	Запрос.УстановитьПараметр("СписокВидовЛогов", мСписокВидовЛогов);
	Запрос.УстановитьПараметр("НачальнаяДатаСоздания", НачалоДня(ТекущаяПроверяемаяДата));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	КоличествоОшибокВЗапросе = Выборка.Количество();
	
	Если Объект.КоличествоОшибокВЛогах <> КоличествоОшибокВЗапросе Тогда
		//появились новые ошибки....
		
		Если КоличествоОшибокВЗапросе = 0 Тогда
			Объект.ИнформацияОбОшибкахОбмена = "За сегодняшний день в логах ошибок нет";
			ЦветНаличияОшибок = Новый Цвет(46,139,87);
		Иначе
			Объект.ИнформацияОбОшибкахОбмена = "ВНИМАНИЕ! За сегодняшний день в логах ошибок: " + КоличествоОшибокВЗапросе;
			ЦветНаличияОшибок = Новый Цвет(255,0,0);
		КонецЕсли;
				
		Элементы.ИнформацияОбОшибкахОбмена.ЦветТекста = ЦветНаличияОшибок;
		Если Объект.КоличествоОшибокВЛогах = 0 Тогда
			//если раньше ошибок не было, а теперь появились, то активизируем форму
			АктивироватьФорму = Истина;
		КонецЕсли;
		
		Объект.КоличествоОшибокВЛогах = КоличествоОшибокВЗапросе;
		
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти


