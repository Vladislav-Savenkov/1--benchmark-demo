
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ГруппаИнтерваловВремениПоЗадачамУМС = Параметры.ГруппаИнтерваловВремениПоЗадачамУМС;
	Объект.ИнтервалВремениВыполненияЗаявки = Параметры.ИнтервалВремениВыполненияЗаявки;
	Объект.ИнтервалВремениРеакцииНаЗаявку = Параметры.ИнтервалВремениРеакцииНаЗаявку;
		
	НастройкиОтчетаПоУмолчанию();
	
КонецПроцедуры

&НаСервере
Процедура НастройкиОтчетаПоУмолчанию()
		
	НастройкиОтчета.ПолучитьЭлементы().Очистить();
	
	мОсновнаяСтрока = НастройкиОтчета.ПолучитьЭлементы().Добавить();
	мОсновнаяСтрока.Наименование = "Настройки отчетов";
	мОсновнаяСтрока.ЗапретУдаления = Истина;
	мОсновнаяСтрока.ИдентификаторОтчета = "НастройкиОтчетов";
	мОсновнаяСтрока.ИндексКартинки = 0;
	мОсновнаяСтрока.Выводить = Истина;
	//мОсновнаяСтрока.Группировка = Истина;
	
	мГруппаВерхнегоУровня = мОсновнаяСтрока.ПолучитьЭлементы();
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Количество работающих сотрудников";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаРаботающиеСотрудники";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Текущий статус работающих сотрудников";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаТекущийСтатусРаботающихСотрудников";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Доступность работающих сотрудников";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаДоступностьРаботающихСотрудников";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Текущий статус задач на сегодня";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаТекущийСтатусЗадачНаСегодня";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Опоздания по задачам";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаОпозданияПоЗадачам";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Причины завершения задач";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаПричиныЗавершенияЗадач";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Средние затраты времени на выполнение заявок";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаСредниеЗатратыВремениНаВыполнениеЗаявок";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Анализ сроков выполнения заявок";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаАнализСроковВыполненияЗаявок";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;
	
	мСтрокаОтчета = мГруппаВерхнегоУровня.Добавить();
	мСтрокаОтчета.Наименование = "Анализ сроков реакции по заявкам";
	мСтрокаОтчета.ЗапретУдаления = Истина;
	мСтрокаОтчета.ИдентификаторОтчета = "ДиаграммаАнализСроковРеакцииПоЗаявкам";
	мСтрокаОтчета.ИндексКартинки = 3;
	мСтрокаОтчета.Выводить = Истина;

КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтчетаПередУдалением(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.ЗапретУдаления Тогда
		Отказ = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтчетаПередНачаломИзменения(Элемент, Отказ)
	
	Если Элемент.ТекущиеДанные.ЗапретУдаления И Элемент.ТекущийЭлемент.Имя = "НастройкиОтчетаНаименование" Тогда
		Отказ = Истина;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтчетаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	АктивнаяСтрока = НастройкиОтчета.НайтиПоИдентификатору(Строка);	
	Если АктивнаяСтрока.Группировка Тогда		
		Для Каждого текИндекс Из ПараметрыПеретаскивания.Значение Цикл
			мНоваяСтрока = АктивнаяСтрока.ПолучитьЭлементы().Добавить();
			текСтрока = НастройкиОтчета.НайтиПоИдентификатору(текИндекс);
			ЗаполнитьЗначенияСвойств(мНоваяСтрока, текСтрока);
			мНоваяСтрока.ИмяРодителя = АктивнаяСтрока.ИдентификаторОтчета; 
			
			мРодительСтроки = текСтрока.ПолучитьРодителя();			
			мРодительСтроки.ПолучитьЭлементы().Удалить(текСтрока);
		КонецЦикла;
		
		Элементы.НастройкиОтчета.Развернуть(Строка, Истина);
		
	Иначе		
		КоллекцияДерева = НастройкиОтчета.ПолучитьЭлементы();
		Для Каждого текИндекс Из ПараметрыПеретаскивания.Значение Цикл						
			мНоваяСтрока = КоллекцияДерева[0].ПолучитьЭлементы().Добавить();
			текСтрока = НастройкиОтчета.НайтиПоИдентификатору(текИндекс);
			ЗаполнитьЗначенияСвойств(мНоваяСтрока, текСтрока);
			мНоваяСтрока.ИмяРодителя = "";
			
			мРодительСтроки = текСтрока.ПолучитьРодителя();
			мРодительСтроки.ПолучитьЭлементы().Удалить(текСтрока);
		КонецЦикла;		
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтчетаВыводитьПриИзменении(Элемент)
		
	АктивнаяСтрока = НастройкиОтчета.НайтиПоИдентификатору(Элементы.НастройкиОтчета.ТекущаяСтрока);
	Если АктивнаяСтрока.Группировка ИЛИ АктивнаяСтрока.ИдентификаторОтчета = "НастройкиОтчетов" Тогда
		мПодчиненныеЭлементы = АктивнаяСтрока.ПолучитьЭлементы();
		Для Каждого текСтрока Из мПодчиненныеЭлементы Цикл
			текСтрока.Выводить = АктивнаяСтрока.Выводить;
			Если текСтрока.Группировка Тогда
				мПодчиненныеЭлементы2 = текСтрока.ПолучитьЭлементы();
				Для Каждого текСтрока2 Из мПодчиненныеЭлементы2 Цикл
					текСтрока2.Выводить = АктивнаяСтрока.Выводить;	
				КонецЦикла;			
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры



#Область КомандыФормы

&НаКлиенте
Процедура ДобавитьГруппу(Команда)
	
	КоллекцияДерева = НастройкиОтчета.ПолучитьЭлементы();
	мНоваяСтрока = КоллекцияДерева[0].ПолучитьЭлементы().Добавить();
	мНоваяСтрока.ИндексКартинки = 0;
	мНоваяСтрока.Выводить = Истина;
	мНоваяСтрока.Группировка = Истина;
	
	мИдСтроки = мНоваяСтрока.ПолучитьИдентификатор();
	Элементы.НастройкиОтчета.ТекущаяСтрока = мИдСтроки;
	мНоваяСтрока.ИдентификаторОтчета = мИдСтроки;
	Элементы.НастройкиОтчета.ИзменитьСтроку();

КонецПроцедуры

&НаКлиенте
Процедура УдалитьГруппу(Команда)
	
	текСтрока = НастройкиОтчета.НайтиПоИдентификатору(Элементы.НастройкиОтчета.ТекущаяСтрока);
	Если НЕ текСтрока = Неопределено И текСтрока.ЗапретУдаления = Ложь Тогда
		Если текСтрока.ПолучитьЭлементы().Количество() > 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Можно удалить только пустые группы!";			
			Сообщение.Сообщить();			
			Возврат;
		КонецЕсли;
		
		мРодительСтроки = текСтрока.ПолучитьРодителя();			
		мРодительСтроки.ПолучитьЭлементы().Удалить(текСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	мАдресНастройкиОтчета = "";
	мАдресМассивГрупп = "";
	
	ПолучитьАдресаВременныхХранилищДляТаблиц(мАдресНастройкиОтчета, мАдресМассивГрупп);	
	
	Если НЕ мАдресНастройкиОтчета = "" И НЕ мАдресМассивГрупп = "" Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ГруппаИнтерваловВремениПоЗадачамУМС", Объект.ГруппаИнтерваловВремениПоЗадачамУМС);
		ПараметрыФормы.Вставить("ИнтервалВремениВыполненияЗаявки", Объект.ИнтервалВремениВыполненияЗаявки);
		ПараметрыФормы.Вставить("ИнтервалВремениРеакцииНаЗаявку", Объект.ИнтервалВремениРеакцииНаЗаявку);	
		ПараметрыФормы.Вставить("АдресНастройкиОтчета", мАдресНастройкиОтчета);
		ПараметрыФормы.Вставить("АдресМассивГрупп", мАдресМассивГрупп);		
				
		ЭтаФорма.Закрыть(ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоУмолчанию(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("НастройкиПоУмолчаниюОповещение",ЭтотОбъект),
					"Установить настройки отчета по умолчанию?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры
	
#КонецОбласти


#Область ПрочиеПроцедурыИФункции

&НаСервере
Процедура ПолучитьАдресаВременныхХранилищДляТаблиц(мАдресНастройкиОтчета, мАдресМассивГрупп)
		
	Если НЕ ПроверкаЗаполненияТаблицы() Тогда
		Возврат;	
	КонецЕсли;
	
	//Вначале преобразуем Дерево в ТаблицуЗначений
	
	мМассивГрупп = Новый Массив;
	мМассивНастройкиОтчета = Новый Массив;
	
	КоллекцияДерева = НастройкиОтчета.ПолучитьЭлементы();
	ГруппаВерхнегоУровня = КоллекцияДерева[0].ПолучитьЭлементы();
	
	Для Каждого текГруппа Из ГруппаВерхнегоУровня Цикл
		Если текГруппа.Группировка Тогда
			мМассивГрупп.Добавить(текГруппа);
			мПодчиненныеЭлементы = текГруппа.ПолучитьЭлементы();
			Для Каждого текСтрока Из мПодчиненныеЭлементы Цикл
				мМассивНастройкиОтчета.Добавить(текСтрока);	
			КонецЦикла;
		Иначе
			мМассивНастройкиОтчета.Добавить(текГруппа);	
		КонецЕсли;		
	КонецЦикла;
		
	мАдресНастройкиОтчета = ПоместитьВоВременноеХранилище(мМассивНастройкиОтчета, УникальныйИдентификатор);
	мАдресМассивГрупп = ПоместитьВоВременноеХранилище(мМассивГрупп, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ПроверкаЗаполненияТаблицы()
	
	мФлаг = Истина;
	
	мТаблицаНаименование = Новый ТаблицаЗначений;
	мТаблицаНаименование.Колонки.Добавить("Наименование");
	мТаблицаНаименование.Колонки.Добавить("Количество");
	
	КоллекцияДерева = НастройкиОтчета.ПолучитьЭлементы();
	ГруппаВерхнегоУровня = КоллекцияДерева[0].ПолучитьЭлементы();
	
	//Проверяем указано ли название для всех групп
	Для Каждого текГруппа Из ГруппаВерхнегоУровня Цикл
		Если текГруппа.Группировка Тогда			
			Если ЗначениеЗаполнено(текГруппа.Наименование) Тогда
				мНоваяСтрока = мТаблицаНаименование.Добавить();
				мНоваяСтрока.Наименование = текГруппа.Наименование;
				мНоваяСтрока.Количество = 1;
			Иначе
				мФлаг = Ложь;								
			КонецЕсли;
		КонецЕсли;		
	КонецЦикла;
	
	Если мФлаг = Ложь Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажите наименование групп!";				
		Сообщение.Сообщить();
	КонецЕсли;
	
	//Проверяем не повторяются ли названия групп
	мТаблицаНаименование.Свернуть("Наименование", "Количество");
	
	Для Каждого текСтрока Из мТаблицаНаименование Цикл
		Если текСтрока.Количество > 1 Тогда
			мФлаг = Ложь;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Названия групп не должно повторяться!" +  Символы.ПС 
						+ "Указано несколько групп с наименованием: " + СокрЛП(текСтрока.Наименование);
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЦикла;
	
	
	Возврат мФлаг;
	
КонецФункции

&НаКлиенте
Процедура НастройкиПоУмолчаниюОповещение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Если РезультатЗакрытия = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли;
	
	НастройкиОтчетаПоУмолчанию();
	
	КоллекцияДерева = НастройкиОтчета.ПолучитьЭлементы();
	мИдВерхнегоУровня = КоллекцияДерева[0].ПолучитьИдентификатор();
	Элементы.НастройкиОтчета.Развернуть(мИдВерхнегоУровня, Истина);
	
КонецПроцедуры

#КонецОбласти



