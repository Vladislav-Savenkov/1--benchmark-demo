

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	Пользователь = Параметры.Пользователь;	
	
	НачалоПериодаИстория = НачалоМесяца(ТекущаяДата());
	КонецПериодаИстория = КонецМесяца(ТекущаяДата());

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.ЗаголовокИсториии.Заголовок = "История сообщений: " + СокрЛП(Пользователь);
	
КонецПроцедуры


#Область ЭлементыИКомандыФормы

&НаКлиенте
Процедура ОбновитьИсторию(Команда)
	
	ОбновитьПолеИстории();

КонецПроцедуры

&НаКлиенте
Процедура ПолеHTMLИсторияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	pEvtObj = ДанныеСобытия.Event;
	Узел = pEvtObj.srcElement;
	
	href = "";
	
	Пока Истина Цикл
		
		Попытка
			ИмяЦели = Узел.tagName
		Исключение
			Прервать;
		КонецПопытки;
		
		Если ИмяЦели = "A" Тогда
			Попытка
				href = Узел.href;
			Исключение
			КонецПопытки;
			Прервать;
		КонецЕсли; 
		
		Узел = Узел.parentElement;
		
	КонецЦикла;
	
	pEvtObj.returnValue = Ложь; 
	
	ОбработатьКомандыПоляHTML(href);

КонецПроцедуры
	
#КонецОбласти


#Область ПрочиеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПолеИстории()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	атл_Сообщения.ДатаРегистрации КАК ДатаРегистрации,
	|	атл_Сообщения.ДатаСоздания КАК ДатаСоздания,
	|	атл_Сообщения.ДатаОтправки КАК ДатаОтправки,
	|	атл_Сообщения.ДатаДоставки КАК ДатаДоставки,
	|	атл_Сообщения.ДатаПрочтения КАК ДатаПрочтения,
	|	атл_Сообщения.Сообщение КАК Сообщение,
	|	атл_Сообщения.Получатель КАК Получатель,
	|	атл_Сообщения.ПолучательМК КАК ПолучательМК,
	|	атл_Сообщения.ОтправительМК КАК ОтправительМК,
	|	атл_Сообщения.ИдентификаторСообщения,
	|	атл_Сообщения.ИдентификаторИнформационнойБазы,
	|	атл_Сообщения.ЭтоСсылкаНаОбъект,
	|	атл_Сообщения.Административное,
	|	атл_Сообщения.Отправитель,
	|	атл_Сообщения.Широта,
	|	атл_Сообщения.Долгота,
	|	ВЫБОР
	|		КОГДА атл_Сообщения.Отправитель = &Пользователь
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Полученное,
	|	ВЫБОР
	|		КОГДА атл_Сообщения.Отправитель = &Пользователь
	|			ТОГДА атл_Сообщения.Отправитель
	|		ИНАЧЕ атл_Сообщения.Получатель
	|	КОНЕЦ КАК Пользователь
	|ИЗ
	|	РегистрСведений.атл_Сообщения КАК атл_Сообщения
	|ГДЕ
	|	(атл_Сообщения.Получатель = &Пользователь
	|				И атл_Сообщения.Отправитель = &ТекущийПользователь
	|				И НЕ атл_Сообщения.УдаленоОтправителем
	|			ИЛИ атл_Сообщения.Получатель = &ТекущийПользователь
	|				И атл_Сообщения.Отправитель = &Пользователь
	|				И НЕ атл_Сообщения.УдаленоПолучателем)
	|	И атл_Сообщения.ДатаРегистрации МЕЖДУ &ПериодС И &ПериодПо
	|	И НЕ(атл_Сообщения.Получатель = &ТекущийПользователь
	|				И атл_Сообщения.ПолучательМК)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРегистрации";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("ТекущийПользователь", ТекущийПользователь);
	Запрос.УстановитьПараметр("ПериодС", НачалоПериодаИстория);
	Запрос.УстановитьПараметр("ПериодПо", КонецДня(КонецПериодаИстория));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	ТекстПоля = "";
	
	ТекстПоля = ПолучитьБлокТекстаПоляHTML("Заголовок");
	
	Объект.ТаблицаСообщений.Очистить();
	
	Пока Выборка.Следующий() Цикл
		//выводим сообщение из выборки
		//Если Выборка.ЭтоСсылкаНаОбъект Тогда
		//	СсылкаНаОбъект = ПолучитьСсылкуПоОписаниюСсылки(Выборка.Сообщение);
		//Иначе
		//	СсылкаНаОбъект = Неопределено;
		//КонецЕсли;
		
		ИдентификаторСообщенияНаЭкране = "s"+СокрЛП(Выборка.ИдентификаторИнформационнойБазы)+"_"+СокрЛП(Выборка.ИдентификаторСообщения);
		
		Если Выборка.Полученное Тогда
			//ТекстПоля = ТекстПоля + ПолучитьБлокТекстаПоляHTML("ВходящееСообщение", Выборка.Отправитель, 
			//Выборка.ДатаРегистрации, ИдентификаторСообщенияНаЭкране, "", Выборка.Сообщение, СсылкаНаОбъект);
			
			ТекстПоля = ТекстПоля + ПолучитьБлокТекстаПоляHTML("ВходящееСообщение", Выборка.Отправитель, 
			Выборка.ДатаРегистрации,	ИдентификаторСообщенияНаЭкране, "", Выборка.Сообщение); //Выборка.СсылкаНаОбъект);

		Иначе
			//в ответ будем ждать дату доставки и дату прочтения
			//СтатусВыводимогоСообщения = ПолучениеСтатусаОтправленногоСообщения(Выборка);
			//ТекстПоля = ТекстПоля + ПолучитьБлокТекстаПоляHTML("ИсходящееСообщение", глТекущийПользователь, 
			//Выборка.ДатаРегистрации,	ИдентификаторСообщенияНаЭкране, СтатусВыводимогоСообщения, Выборка.Сообщение, СсылкаНаОбъект);
			
			СтатусВыводимогоСообщения = ПолучениеСтатусаОтправленногоСообщения(Выборка.ДатаПрочтения, Выборка.ДатаДоставки, Выборка.ДатаОтправки);

			ТекстПоля = ТекстПоля + ПолучитьБлокТекстаПоляHTML("ИсходящееСообщение", ТекущийПользователь, 
			Выборка.ДатаРегистрации,	ИдентификаторСообщенияНаЭкране, СтатусВыводимогоСообщения, Выборка.Сообщение); //Выборка.СсылкаНаОбъект);

		КонецЕсли;
			
		НоваяСтрока = Объект.ТаблицаСообщений.Добавить();
		НоваяСтрока.ИдентификаторСообщения = Выборка.ИдентификаторСообщения;
		НоваяСтрока.ИдентификаторИнформационнойБазы = Выборка.ИдентификаторИнформационнойБазы;
		НоваяСтрока.Сообщение       = Выборка.Сообщение;
		НоваяСтрока.Пользователь	= Выборка.Пользователь;
		
		НоваяСтрока.Полученное = Истина;
		
		НоваяСтрока.ДатаСоздания 	= Выборка.ДатаСоздания;
		НоваяСтрока.ДатаРегистрации = Выборка.ДатаРегистрации;
		НоваяСтрока.ДатаОтправки 	= Выборка.ДатаОтправки;
		НоваяСтрока.ДатаДоставки 	= Выборка.ДатаДоставки;
		
		НоваяСтрока.ПолучательМК 	= Выборка.ПолучательМК;
		НоваяСтрока.ОтправительМК 	= Выборка.ОтправительМК;
		
		НоваяСтрока.Широта		 	= Выборка.Широта;
		НоваяСтрока.Долгота		 	= Выборка.Долгота;
		
		ИдентификаторСообщенияНаЭкране = "s"+СокрЛП(Выборка.ИдентификаторИнформационнойБазы)+"_"+СокрЛП(Выборка.ИдентификаторСообщения);
		НоваяСтрока.ИдентификаторСообщенияНаЭкране = ИдентификаторСообщенияНаЭкране;
		НоваяСтрока.ЭтоСсылкаНаОбъект 		= Выборка.ЭтоСсылкаНаОбъект;
		//НоваяСтрока.СсылкаНаОбъект 			= СсылкаНаОбъект;
		
	КонецЦикла;
	
	ТекстПоля = ТекстПоля + ПолучитьБлокТекстаПоляHTML("Подвал");
	
	ЭтаФорма.ПолеHTMLИстория = ТекстПоля;
	
	//ЭлементФормы.УстановитьТекст(ТекстПоля);
	
	//выводим полученное на экран

	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьБлокТекстаПоляHTML(ТипБлока, Знач АвторСообщения = "", Знач ДатаРегистрации = '00010101', 
					Знач ИдентификаторСообщенияНаЭкране = "", Знач СтатусСообщения = "", Знач Сообщение = "", Знач СсылкаНаОбъект = Неопределено) Экспорт
	
	БлокТекстДляВозврата = "";
	
	Если ТипБлока = "Заголовок" Тогда
		
		БлокТекстДляВозврата = " <HTML><HEAD>
		| <META http-equiv=Content-Type content=""text/html; charset=utf-8"">
		| <STYLE>
		| div
		| {
		|  font-family: Verdana;
		|  margin:2px;
		|  font-size: 13px; 
		| }
		| .messHeader
		| {
		|  margin-top:6px;
		|  font-weight: bold;
		| }
		| .input
		| {
		|  color:#f00;
		| }
		| .output
		| {
		|  color:#00f;
		| }
		| .status
		| {
		|  color:#888;
		|  font-size: 11px; 
		| }
		| .info:LINK, .info:VISITED, .info:ACTIVE { TEXT-DECORATION: NONE;  color:#888; font-size: 11px; } 
		| .info:HOVER { TEXT-DECORATION: NONE ;COLOR:RED; } 		
		| </STYLE>
		| </HEAD>
		| <BODY id=page onload=""window.scrollTo(0,document.getElementById('page').scrollHeight)"">";	
		
	ИначеЕсли ТипБлока = "ВходящееСообщение" Тогда
		Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
			БлокТекстДляВозврата = "   <DIV class=""messHeader input"">" + УдалитьЗапрещенныеСимволы(АвторСообщения) + " (" + УдалитьЗапрещенныеСимволы(ДатаРегистрации) + ") <a href=""#ОткрытьИнформациюОСообщении=" + УдалитьЗапрещенныеСимволы(ИдентификаторСообщенияНаЭкране) + "ff*ff"">(i)</a></DIV>
			|   <DIV><SPAN class=""status"" id=""" + УдалитьЗапрещенныеСимволы(ИдентификаторСообщенияНаЭкране) + """>"+УдалитьЗапрещенныеСимволы(СтатусСообщения)+"</SPAN><a href=""#ОткрытьСсылку=" + УдалитьЗапрещенныеСимволы(Сообщение) + "dd*dd"">"+УдалитьЗапрещенныеСимволы(СокрЛП(СсылкаНаОбъект))+"</a></DIV>";
		Иначе //обычное сообщение
			БлокТекстДляВозврата = "   <DIV class=""messHeader input"">" + УдалитьЗапрещенныеСимволы(АвторСообщения) + " (" + УдалитьЗапрещенныеСимволы(ДатаРегистрации) + ") <a href=""#ОткрытьИнформациюОСообщении=" + УдалитьЗапрещенныеСимволы(ИдентификаторСообщенияНаЭкране) + "ff*ff"">(i)</a></DIV>
			|   <DIV><SPAN class=""status"" id=""" + УдалитьЗапрещенныеСимволы(ИдентификаторСообщенияНаЭкране) + """>"+УдалитьЗапрещенныеСимволы(СтатусСообщения)+"</SPAN>" + УдалитьЗапрещенныеСимволы(Сообщение) + "</DIV>";
		КонецЕсли;
		
	ИначеЕсли ТипБлока = "ИсходящееСообщение" Тогда
		Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
			БлокТекстДляВозврата = "   <DIV class=""messHeader output"">" + УдалитьЗапрещенныеСимволы(АвторСообщения) + " (" + УдалитьЗапрещенныеСимволы(ДатаРегистрации) + ") <a href=""#ОткрытьИнформациюОСообщении=" + УдалитьЗапрещенныеСимволы(ИдентификаторСообщенияНаЭкране) + "ff*ff"">(i)</a></DIV>
			|   <DIV><SPAN class=""status"" id=""" + УдалитьЗапрещенныеСимволы(ИдентификаторСообщенияНаЭкране) + """>"+УдалитьЗапрещенныеСимволы(СтатусСообщения)+"</SPAN><a href=""#ОткрытьСсылку=" + УдалитьЗапрещенныеСимволы(Сообщение) + "dd*dd"">"+УдалитьЗапрещенныеСимволы(СокрЛП(СсылкаНаОбъект))+"</a></DIV>";
		Иначе //обычное сообщение
			БлокТекстДляВозврата = "   <DIV class=""messHeader output"">" + УдалитьЗапрещенныеСимволы(АвторСообщения) + " (" + УдалитьЗапрещенныеСимволы(ДатаРегистрации) + ") <a href=""#ОткрытьИнформациюОСообщении=" + УдалитьЗапрещенныеСимволы(ИдентификаторСообщенияНаЭкране) + "ff*ff"">(i)</a></DIV>
			|   <DIV><SPAN class=""status"" id=""" + УдалитьЗапрещенныеСимволы(ИдентификаторСообщенияНаЭкране) + """>"+УдалитьЗапрещенныеСимволы(СтатусСообщения)+"</SPAN>" + УдалитьЗапрещенныеСимволы(Сообщение) + "</DIV>";
		КонецЕсли;
		
		
		//<a class="info" href=""#ОткрытьСсылку=" + ТекстСсылка + "dd*dd"">(i)</a>
	
	ИначеЕсли ТипБлока = "Подвал" Тогда
		
		БлокТекстДляВозврата = "</BODY></HTML>";
		
	КонецЕсли;
	
	Возврат БлокТекстДляВозврата;
	
КонецФункции

&НаСервереБезКонтекста
Функция УдалитьЗапрещенныеСимволы(СтрокаДляПреобразования)
	
	СтрокаДляПреобразования = СтрЗаменить(СтрокаДляПреобразования, "&", "&amp;");
	
	СтрокаДляПреобразования = СтрЗаменить(СтрокаДляПреобразования, "<", "&lt;");
	СтрокаДляПреобразования = СтрЗаменить(СтрокаДляПреобразования, ">", "&gt;");
	СтрокаДляПреобразования = СтрЗаменить(СтрокаДляПреобразования, """", "&quot;");
	СтрокаДляПреобразования = СтрЗаменить(СтрокаДляПреобразования, "\n", "<br>");
	СтрокаДляПреобразования = СтрЗаменить(СтрокаДляПреобразования, Символы.ПС, "<br>");

	Возврат СтрокаДляПреобразования;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучениеСтатусаОтправленногоСообщения(ДатаПрочтения, ДатаДоставки, ДатаОтправки)
	
	Если ЗначениеЗаполнено(ДатаПрочтения) Тогда
		СтатусВыводимогоСообщения = "(прочитано) ";
	ИначеЕсли ЗначениеЗаполнено(ДатаДоставки) Тогда
		СтатусВыводимогоСообщения = "(доставлено) ";
	ИначеЕсли ЗначениеЗаполнено(ДатаОтправки) Тогда
		СтатусВыводимогоСообщения = "(отправлено) ";
	Иначе
		СтатусВыводимогоСообщения = "(создано) ";
	КонецЕсли;
	
	Возврат СтатусВыводимогоСообщения;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьКомандыПоляHTML(href)
			
	НачалоКоманды = Найти(href, "ОткрытьИнформациюОСообщении=");
	Если НачалоКоманды > 0 Тогда
		ОкончаниеКоманды = Найти(href, "ff*ff");
		Если ОкончаниеКоманды = 0 Тогда
			//индентификатор почему-то не нашли
		Иначе
			НачалоИдентификатора = НачалоКоманды + 28;
			ИдентификаторСообщения = Сред(href, НачалоИдентификатора, ОкончаниеКоманды - НачалоИдентификатора);						
			
			МассивСообщений = Объект.ТаблицаСообщений.НайтиСтроки(Новый Структура("ИдентификаторСообщенияНаЭкране", ИдентификаторСообщения));
			
			Если МассивСообщений.Количество() > 0 Тогда
								
				АдресХранилища = ПолучитьАдресХранилищаВыгрузкиТаблицы("ТаблицаСообщений");
				
				Если ЗначениеЗаполнено(АдресХранилища) Тогда
					ПараметрыФормы = Новый Структура;
					ПараметрыФормы.Вставить("ИдентификаторСообщенияНаЭкране", ИдентификаторСообщения);			
					ПараметрыФормы.Вставить("АдресХранилища", АдресХранилища);				
					ОткрытьФорму("Обработка.атл_ОбменСообщениями.Форма.ИнформацияОСообщении", ПараметрыФормы);
				КонецЕсли;

		
	//			ПараметрыФормы = Новый Структура;
	//			//ПараметрыФормы.Вставить("ТекстНадписиИнформации", ТекстИнформации); 
	//			//ПараметрыФормы.Вставить("ИдентификаторСообщения", МассивСообщений[0].ИдентификаторСообщения); 
	//			//ПараметрыФормы.Вставить("ИдентификаторИнформационнойБазы", МассивСообщений[0].ИдентификаторИнформационнойБазы); 				
	//			ПараметрыФормы.Вставить("ИдентификаторСообщенияНаЭкране", ИдентификаторСообщения);
	//			//ПараметрыФормы.Вставить("ИмяТабличнойЧасти", "ТаблицаСообщений");
	//			ПараметрыФормы.Вставить("АдресХранилища", АдресХранилища);
	//			
	//			ОткрытьФорму("Обработка.атл_ОбменСообщениями.Форма.ИнформацияОСообщении", ПараметрыФормы);		

			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
	//отрабатываем команду "ОткрытьСсылку="
	//НачалоКоманды = Найти(href, "ОткрытьСсылку=");
	//Если НачалоКоманды > 0 Тогда
	//	ОкончаниеКоманды = Найти(href, "dd*dd");
	//	Если ОкончаниеКоманды = 0 Тогда
	//		//индентификатор почему-то не нашли
	//	Иначе
	//		НачалоИдентификатора = НачалоКоманды + 14;
	//		ОписаниеСсылкиНаОбъект = Сред(href, НачалоИдентификатора, ОкончаниеКоманды - НачалоИдентификатора);
	//		
	//		//СсылкаНаОбъект = атл_ДополнительныйМодуль.ПолучитьСсылкуПоОписаниюСсылки(ОписаниеСсылкиНаОбъект);
	//		
	//		Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
	//			СсылкаНаОбъект.ПолучитьФорму().Открыть();
	//		КонецЕсли;

	//	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресХранилищаВыгрузкиТаблицы(ИмяТаблицы)
	
	АдресХранилища = ПоместитьВоВременноеХранилище(Объект[ИмяТаблицы].Выгрузить(), УникальныйИдентификатор);	
	
	Возврат АдресХранилища;
	
КонецФункции
	
#КонецОбласти
