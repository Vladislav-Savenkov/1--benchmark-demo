
#Область СобытияФормы 

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТолькоАктивные = Параметры.ТолькоАктивные;
	ДатаПоследнейАктивности = Параметры.ДатаПоследнейАктивности;
	
	ВремяВТечениеКоторогоПользовательОнлайн = Константы.атл_ВремяВТечениеКоторогоПользовательОнлайн.Получить();
	
	ЗаполнитьУсловноеОформление();
	
	ОбновитьСписокПользователей(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьПометкуИКартинкуКнопкиАктивности();
	УстановитьПометкуКнопкиИВидимостьКолонкиДатаПоследнейАктивности();
	
КонецПроцедуры

#КонецОбласти


#Область КомандыФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого текСтрока Из СписокПользователей Цикл
		текСтрока.Флаг = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
			
	Для Каждого текСтрока Из СписокПользователей Цикл
		текСтрока.Флаг = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоАктивные(Команда)
	
	ТолькоАктивные = НЕ ТолькоАктивные;
	УстановитьПометкуИКартинкуКнопкиАктивности();

	ОбновитьСписокПользователейНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоследнейАктивности(Команда)
	
	ДатаПоследнейАктивности = НЕ ДатаПоследнейАктивности;
	УстановитьПометкуКнопкиИВидимостьКолонкиДатаПоследнейАктивности();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	
	ТекущийПользовательВСтроке = Неопределено;
	Если Не Элементы.СписокПользователей.ТекущиеДанные = Неопределено Тогда
		ТекущийПользовательВСтроке = Элементы.СписокПользователей.ТекущиеДанные.Пользователь;	
	КонецЕсли;	
	
	ОбновитьСписокПользователейНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	ОтправитьСообщение();
	
	СообщениеПользователям = "";
	Если ЗначениеЗаполнено(АдресТаблицыСообщения) Тогда
		Оповестить("ОбновлениеДиалоговПослеОтправкиСообщенияНескольким", АдресТаблицыСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ПроцедурыОтображенияЭлементовФормы

&НаКлиенте
Процедура УстановитьПометкуИКартинкуКнопкиАктивности()
	
	Кнопка = Элементы.ТолькоАктивные;
	Кнопка.Пометка = ТолькоАктивные;
	
	Если Кнопка.Пометка Тогда
		Кнопка.Картинка = БиблиотекаКартинок.атл_СтатусыАктивностиАктивен;
	Иначе
		Кнопка.Картинка = БиблиотекаКартинок.атл_СтатусыАктивностиУжатые;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуКнопкиИВидимостьКолонкиДатаПоследнейАктивности()
	
	Кнопка = Элементы.ДатаПоследнейАктивности;
	Кнопка.Пометка = ДатаПоследнейАктивности;
	
	Элементы.СписокПользователейДатаПоследнейАктивности.Видимость = ДатаПоследнейАктивности;
		
КонецПроцедуры
	
#КонецОбласти

#Область ПрочиеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСписокПользователейНаКлиенте()
	
	ТекущийПользовательВСтроке = Неопределено;
	Если Не Элементы.СписокПользователей.ТекущиеДанные = Неопределено Тогда
		ТекущийПользовательВСтроке = Элементы.СписокПользователей.ТекущиеДанные.Пользователь;	
	КонецЕсли;
	
	ОбновитьСписокПользователей(ТекущийПользовательВСтроке);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокПользователей(ТекущийПользовательВСтроке)
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.ЯвляетсяПользователемБД,
	               |	ВложенныйЗапрос.ЯвляетсяПользователемМК,
	               |	ВложенныйЗапрос.Ссылка КАК Пользователь,
	               |	0 КАК Флаг,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.ПользовательАктивенМК = ЛОЖЬ
	               |				И ВложенныйЗапрос.ЯвляетсяПользователемМК = ИСТИНА
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВложенныйЗапрос.ПользовательАктивенМК = ИСТИНА
	               |					ТОГДА 1
	               |				ИНАЧЕ 2
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ПользовательАктивенМКРезультат,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.ПользовательАктивен1С = ЛОЖЬ
	               |				И ВложенныйЗапрос.ЯвляетсяПользователемБД = ИСТИНА
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВложенныйЗапрос.ПользовательАктивен1С = ИСТИНА
	               |					ТОГДА 1
	               |				ИНАЧЕ 2
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ПользовательАктивен1СРезультат,
	               |	ВложенныйЗапрос.ПользовательАктивен,
	               |	ВложенныйЗапрос.ЯвляетсяПользователемУСС,
	               |	ВложенныйЗапрос.ДатаПоследнейАктивности,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.ДатаПолученияИнформацииОбУстройстве = &ПустаяДата
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВложенныйЗапрос.ЗарядБатареи < 0
	               |					ТОГДА 0 - ВложенныйЗапрос.ЗарядБатареи
	               |				ИНАЧЕ ВложенныйЗапрос.ЗарядБатареи
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ЗарядБатареиРезультат,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.ЗарядБатареи < 0
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ЗарядБатареиУстарел,
	               |	ВложенныйЗапрос.Координаты,
	               |	ВложенныйЗапрос.ДатаПолученияИнформацииОбУстройстве,
	               |	ВложенныйЗапрос.ДатаПоследнейАктивностиСКоординатами,
	               |	СУММА(ЕСТЬNULL(ВложенныйЗапросКоличествоНепрочитанныхСообщений.Количество, 0)) КАК КоличествоНепрочитанныхСообщений
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		Пользователи.Ссылка КАК Ссылка,
	               |		ВЫБОР
	               |			КОГДА ВложенныйЗапросДатаПоследнейАктивности1С.ДатаПоследнейАктивности ЕСТЬ NULL
	               |				ТОГДА ЛОЖЬ
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ КАК ЯвляетсяПользователемБД,
	               |		ЕСТЬNULL(ВложенныйЗапросПользователиМК.ЯвляетсяПользователемМК, ЛОЖЬ) КАК ЯвляетсяПользователемМК,
	               |		ЕСТЬNULL(ВложенныйЗапросАктивныеПользователиМК.ПользовательМКАктивен, ЛОЖЬ) КАК ПользовательАктивенМК,
	               |		ЕСТЬNULL(ВложенныйЗапросАктивныеПользователи1С.Пользователь1САктивен, ЛОЖЬ) КАК ПользовательАктивен1С,
	               |		ВЫБОР
	               |			КОГДА ВложенныйЗапросДополнительнаяИнформацияМК.ЗарядБатареи < 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ЕСТЬNULL(ВложенныйЗапросДополнительнаяИнформацияМК.ДатаПолученияИнформацииОбУстройстве, &ПустаяДата) > &ДатаДопустимойИнформацииОбУстройстве
	               |						ТОГДА ЕСТЬNULL(ВложенныйЗапросДополнительнаяИнформацияМК.ЗарядБатареи, 0)
	               |					ИНАЧЕ ЕСТЬNULL(-ВложенныйЗапросДополнительнаяИнформацияМК.ЗарядБатареи, 0)
	               |				КОНЕЦ
	               |		КОНЕЦ КАК ЗарядБатареи,
	               |		ВЫБОР
	               |			КОГДА ВложенныйЗапросДополнительнаяИнформацияМК.ДатаПоследнейАктивностиСКоординатами ЕСТЬ NULL
	               |					ИЛИ ВложенныйЗапросДополнительнаяИнформацияМК.ИсточникКоординат ЕСТЬ NULL
	               |				ТОГДА ВЫБОР
	               |						КОГДА НЕ ЕСТЬNULL(ВложенныйЗапросПользователиМК.ЯвляетсяПользователемМК, ЛОЖЬ)
	               |							ТОГДА 0
	               |						ИНАЧЕ 1
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВложенныйЗапросДополнительнаяИнформацияМК.ДатаПоследнейАктивностиСКоординатами > &ДатаДопустимойПоследнейАктивностиСКоординатами
	               |						ТОГДА ВЫБОР
	               |								КОГДА ВложенныйЗапросДополнительнаяИнформацияМК.ИсточникКоординат = ЗНАЧЕНИЕ(Перечисление.атл_ВидыИсточниковКоординат.Сеть)
	               |									ТОГДА 4
	               |								ИНАЧЕ ВЫБОР
	               |										КОГДА ВложенныйЗапросДополнительнаяИнформацияМК.ИсточникКоординат = ЗНАЧЕНИЕ(Перечисление.атл_ВидыИсточниковКоординат.GPS)
	               |											ТОГДА 5
	               |									КОНЕЦ
	               |							КОНЕЦ
	               |					ИНАЧЕ ВЫБОР
	               |							КОГДА ВложенныйЗапросДополнительнаяИнформацияМК.ИсточникКоординат = ЗНАЧЕНИЕ(Перечисление.атл_ВидыИсточниковКоординат.Сеть)
	               |								ТОГДА 2
	               |							ИНАЧЕ ВЫБОР
	               |									КОГДА ВложенныйЗапросДополнительнаяИнформацияМК.ИсточникКоординат = ЗНАЧЕНИЕ(Перечисление.атл_ВидыИсточниковКоординат.GPS)
	               |										ТОГДА 3
	               |								КОНЕЦ
	               |						КОНЕЦ
	               |				КОНЕЦ
	               |		КОНЕЦ КАК Координаты,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(ВложенныйЗапросАктивныеПользователиМК.ПользовательМКАктивен, ЛОЖЬ)
	               |					ИЛИ ЕСТЬNULL(ВложенныйЗапросАктивныеПользователи1С.Пользователь1САктивен, ЛОЖЬ)
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ЛОЖЬ
	               |		КОНЕЦ КАК ПользовательАктивен,
	               |		ЕСТЬNULL(ВложенныйЗапросПользователиБД.ЯвляетсяПользователемУСС, ЛОЖЬ) КАК ЯвляетсяПользователемУСС,
	               |		ВЫБОР
	               |			КОГДА ЕСТЬNULL(ВложенныйЗапросДатаПоследнейАктивности1С.ДатаПоследнейАктивности, &ПустаяДата) > ЕСТЬNULL(ВложенныйЗапросДатаПоследнейАктивностиМК.ДатаПоследнейАктивности, &ПустаяДата)
	               |				ТОГДА ЕСТЬNULL(ВложенныйЗапросДатаПоследнейАктивности1С.ДатаПоследнейАктивности, &ПустаяДата)
	               |			ИНАЧЕ ЕСТЬNULL(ВложенныйЗапросДатаПоследнейАктивностиМК.ДатаПоследнейАктивности, &ПустаяДата)
	               |		КОНЕЦ КАК ДатаПоследнейАктивности,
	               |		ЕСТЬNULL(ВложенныйЗапросДополнительнаяИнформацияМК.ДатаПолученияИнформацииОбУстройстве, &ПустаяДата) КАК ДатаПолученияИнформацииОбУстройстве,
	               |		ЕСТЬNULL(ВложенныйЗапросДополнительнаяИнформацияМК.ДатаПоследнейАктивностиСКоординатами, &ПустаяДата) КАК ДатаПоследнейАктивностиСКоординатами
	               |	ИЗ
	               |		Справочник.Пользователи КАК Пользователи
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				ПользователиИБ.Ссылка КАК Пользователь,
	               |				ИСТИНА КАК ЯвляетсяПользователемБД,
	               |				ИСТИНА КАК ЯвляетсяПользователемУСС
	               |			ИЗ
	               |				Справочник.Пользователи КАК ПользователиИБ) КАК ВложенныйЗапросПользователиБД
	               |			ПО Пользователи.Ссылка = ВложенныйЗапросПользователиБД.Пользователь
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				атл_НастройкиПодключенияМобильныхСотрудников.Пользователь КАК Пользователь,
	               |				атл_НастройкиПодключенияМобильныхСотрудников.ЯвляетсяПользователемМК КАК ЯвляетсяПользователемМК
	               |			ИЗ
	               |				РегистрСведений.атл_НастройкиПодключенияМобильныхСотрудников КАК атл_НастройкиПодключенияМобильныхСотрудников
	               |			ГДЕ
	               |				атл_НастройкиПодключенияМобильныхСотрудников.ЯвляетсяПользователемМК = ИСТИНА) КАК ВложенныйЗапросПользователиМК
	               |			ПО Пользователи.Ссылка = ВложенныйЗапросПользователиМК.Пользователь
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				атл_АктивностьПользователей.Пользователь КАК Пользователь,
	               |				ИСТИНА КАК ПользовательМКАктивен,
	               |				атл_АктивностьПользователей.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности
	               |			ИЗ
	               |				РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	               |			ГДЕ
	               |				атл_АктивностьПользователей.ДатаПоследнейАктивности >= &ДатаДопустимойПоследнейАктивности
	               |				И атл_АктивностьПользователей.МК = ИСТИНА) КАК ВложенныйЗапросАктивныеПользователиМК
	               |			ПО Пользователи.Ссылка = ВложенныйЗапросАктивныеПользователиМК.Пользователь
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |				атл_АктивностьПользователей.Пользователь КАК Пользователь,
	               |				атл_АктивностьПользователей.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности
	               |			ИЗ
	               |				РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	               |			ГДЕ
	               |				атл_АктивностьПользователей.МК = ИСТИНА) КАК ВложенныйЗапросДатаПоследнейАктивностиМК
	               |			ПО Пользователи.Ссылка = ВложенныйЗапросДатаПоследнейАктивностиМК.Пользователь
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				атл_АктивностьПользователей.Пользователь КАК Пользователь,
	               |				ИСТИНА КАК Пользователь1САктивен,
	               |				атл_АктивностьПользователей.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности
	               |			ИЗ
	               |				РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	               |			ГДЕ
	               |				атл_АктивностьПользователей.МК = ЛОЖЬ
	               |				И атл_АктивностьПользователей.ДатаПоследнейАктивности >= &ДатаДопустимойПоследнейАктивности) КАК ВложенныйЗапросАктивныеПользователи1С
	               |			ПО Пользователи.Ссылка = ВложенныйЗапросАктивныеПользователи1С.Пользователь
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				атл_АктивностьПользователей.Пользователь КАК Пользователь,
	               |				атл_АктивностьПользователей.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности
	               |			ИЗ
	               |				РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	               |			ГДЕ
	               |				атл_АктивностьПользователей.МК = ЛОЖЬ) КАК ВложенныйЗапросДатаПоследнейАктивности1С
	               |			ПО Пользователи.Ссылка = ВложенныйЗапросДатаПоследнейАктивности1С.Пользователь
	               |			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				атл_АктивностьПользователей.Пользователь КАК Пользователь,
	               |				атл_АктивностьПользователей.ЗарядБатареи КАК ЗарядБатареи,
	               |				атл_АктивностьПользователей.ИсточникКоординат КАК ИсточникКоординат,
	               |				атл_АктивностьПользователей.ДатаПолученияИнформацииОбУстройстве КАК ДатаПолученияИнформацииОбУстройстве,
	               |				атл_АктивностьПользователей.ДатаПоследнейАктивностиСКоординатами КАК ДатаПоследнейАктивностиСКоординатами
	               |			ИЗ
	               |				РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	               |			ГДЕ
	               |				атл_АктивностьПользователей.МК = ИСТИНА) КАК ВложенныйЗапросДополнительнаяИнформацияМК
	               |			ПО Пользователи.Ссылка = ВложенныйЗапросДополнительнаяИнформацияМК.Пользователь
	               |	ГДЕ
	               |		Пользователи.Ссылка <> &ТекущийПользователь) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			атл_Сообщения.Отправитель КАК Отправитель,
	               |			СУММА(1) КАК Количество
	               |		ИЗ
	               |			РегистрСведений.атл_Сообщения КАК атл_Сообщения
	               |		ГДЕ
	               |			атл_Сообщения.ДатаПрочтения = &ПустаяДата
	               |			И атл_Сообщения.Получатель = &ТекущийПользователь
	               |			И НЕ атл_Сообщения.УдаленоПолучателем
	               |			И НЕ(атл_Сообщения.ПолучательМК
	               |						И атл_Сообщения.Получатель = &ТекущийПользователь)
	               |			И НЕ атл_Сообщения.Получатель = атл_Сообщения.Отправитель
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			атл_Сообщения.Отправитель) КАК ВложенныйЗапросКоличествоНепрочитанныхСообщений
	               |		ПО ВложенныйЗапрос.Ссылка = ВложенныйЗапросКоличествоНепрочитанныхСообщений.Отправитель
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ТолькоАктивные
	               |				ТОГДА ВложенныйЗапрос.ПользовательАктивен = ИСТИНА
	               |			ИНАЧЕ ВложенныйЗапрос.ПользовательАктивен = ЛОЖЬ
	               |					ИЛИ ВложенныйЗапрос.ПользовательАктивен = ИСТИНА
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &ОтборПоВидуАктивности = 1
	               |				ТОГДА ВложенныйЗапрос.ПользовательАктивен1С = ИСТИНА
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА &ОтборПоВидуАктивности = 2
	               |						ТОГДА ВложенныйЗапрос.ПользовательАктивенМК = ИСТИНА
	               |					ИНАЧЕ ВложенныйЗапрос.ПользовательАктивен1С = ЛОЖЬ
	               |							ИЛИ ВложенныйЗапрос.ПользовательАктивен1С = ИСТИНА
	               |				КОНЕЦ
	               |		КОНЕЦ
	               |	И НЕ ВложенныйЗапрос.ДатаПоследнейАктивности = &ПустаяДата
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.ЯвляетсяПользователемБД,
	               |	ВложенныйЗапрос.ЯвляетсяПользователемМК,
	               |	ВложенныйЗапрос.Ссылка,
	               |	ВложенныйЗапрос.ПользовательАктивен,
	               |	ВложенныйЗапрос.ЯвляетсяПользователемУСС,
	               |	ВложенныйЗапрос.ДатаПоследнейАктивности,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.ДатаПолученияИнформацииОбУстройстве = &ПустаяДата
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВложенныйЗапрос.ЗарядБатареи < 0
	               |					ТОГДА 0 - ВложенныйЗапрос.ЗарядБатареи
	               |				ИНАЧЕ ВложенныйЗапрос.ЗарядБатареи
	               |			КОНЕЦ
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.ЗарядБатареи < 0
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ,
	               |	ВложенныйЗапрос.Координаты,
	               |	ВложенныйЗапрос.ДатаПолученияИнформацииОбУстройстве,
	               |	ВложенныйЗапрос.ДатаПоследнейАктивностиСКоординатами,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.ПользовательАктивенМК = ЛОЖЬ
	               |				И ВложенныйЗапрос.ЯвляетсяПользователемМК = ИСТИНА
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВложенныйЗапрос.ПользовательАктивенМК = ИСТИНА
	               |					ТОГДА 1
	               |				ИНАЧЕ 2
	               |			КОНЕЦ
	               |	КОНЕЦ,
	               |	ВЫБОР
	               |		КОГДА ВложенныйЗапрос.ПользовательАктивен1С = ЛОЖЬ
	               |				И ВложенныйЗапрос.ЯвляетсяПользователемБД = ИСТИНА
	               |			ТОГДА 0
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ВложенныйЗапрос.ПользовательАктивен1С = ИСТИНА
	               |					ТОГДА 1
	               |				ИНАЧЕ 2
	               |			КОНЕЦ
	               |	КОНЕЦ";
				   
	Запрос.УстановитьПараметр("ДатаДопустимойПоследнейАктивности", ТекущаяДата() - ?(ВремяВТечениеКоторогоПользовательОнлайн = 0, 300,ВремяВТечениеКоторогоПользовательОнлайн));		
	Запрос.УстановитьПараметр("ДатаДопустимойИнформацииОбУстройстве", ТекущаяДата() - ?(ВремяВТечениеКоторогоПользовательОнлайн = 0, 300*2,ВремяВТечениеКоторогоПользовательОнлайн));		
	Запрос.УстановитьПараметр("ДатаДопустимойПоследнейАктивностиСКоординатами", ТекущаяДата() - ?(ВремяВТечениеКоторогоПользовательОнлайн = 0, 300*2,ВремяВТечениеКоторогоПользовательОнлайн));		
	Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101"));
	Запрос.УстановитьПараметр("ТекущийПользователь",ПараметрыСеанса.ТекущийПользователь);	
	Запрос.УстановитьПараметр("ТолькоАктивные", ТолькоАктивные);
	Запрос.УстановитьПараметр("ОтборПоВидуАктивности", 0);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	СписокПользователей.Загрузить(Выгрузка);
		
	Если НЕ ТекущийПользовательВСтроке = Неопределено Тогда
		НайденныеСтроки = СписокПользователей.НайтиСтроки(Новый Структура("Пользователь", ТекущийПользовательВСтроке));			
		Если НайденныеСтроки.Количество() > 0 Тогда			
			Элементы.СписокПользователей.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУсловноеОформление()
	
	ЭлементыУФ = УсловноеОформление.Элементы;
	ЭлементыУФ.Очистить();
	
	НовыйЭлементУФ = ЭлементыУФ.Добавить();
	
	ПолеЭлемента = НовыйЭлементУФ.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокПользователей");

	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПользователей.ЯвляетсяПользователемМК");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = НовыйЭлементУФ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СписокПользователей.ЯвляетсяПользователемУСС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	НовыйЭлементУФ.Оформление.УстановитьЗначениеПараметра("ЦветФона", Новый Цвет(200, 200, 200));
		
КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщение(ПолучательМК = Неопределено)
	
	НайденныеСтроки = СписокПользователей.НайтиСтроки(Новый Структура("Флаг", Истина));	
	
	Для Каждого текСтрока Из НайденныеСтроки Цикл		
		Если ПолучательМК = Неопределено Тогда //пытаемся автоматически определить получателя
			ОтправляемНаМК = ОпределениеВидаПолучателя(текСтрока.Пользователь);
			Если ОтправляемНаМК = Неопределено Тогда
				Возврат;
			Иначе
				ПолучательМК = ОтправляемНаМК;
			КонецЕсли;
		КонецЕсли;
		
		ДобавитьЗаписиВРегистрыПриОтправкеСообщения(СообщениеПользователям, текСтрока.Пользователь, ПолучательМК);
				
	КонецЦикла;
	
	Если Объект.ТаблицаСообщений.Количество() > 0 Тогда
		АдресТаблицыСообщения = ПоместитьВоВременноеХранилище(Объект.ТаблицаСообщений.Выгрузить(), УникальныйИдентификатор);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЗаписиВРегистрыПриОтправкеСообщения(ТекстСообщенияИзПоля, Ник, ПолучательМК = Ложь, СсылкаНаОбъект = Неопределено)
	
	ДатаСообщения = ТекущаяДата();
	
	Если ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		ЭтоСсылкаНаОбъект = Истина;
		ТекстСообщения = СсылкаНаОбъект.Метаданные().ПолноеИмя() + "." + Строка(СсылкаНаОбъект.УникальныйИдентификатор());
	Иначе
		ЭтоСсылкаНаОбъект = Ложь;
		ТекстСообщения = ТекстСообщенияИзПоля;
	КонецЕсли;
	
	//создание записи в регистре сообщений
	Сообщение = РегистрыСведений.атл_Сообщения.СоздатьМенеджерЗаписи();
	Сообщение.ДатаРегистрации  			= ДатаСообщения;
	Сообщение.ДатаСоздания     			= ДатаСообщения;
	Сообщение.Отправитель      			= ПараметрыСеанса.ТекущийПользователь;
	Сообщение.Получатель       			= Ник;
	Сообщение.Сообщение        			= ТекстСообщения;
	Сообщение.Административное 			= Ложь;
	Сообщение.ПолучательМК 				= ПолучательМК;
	Сообщение.ИдентификаторИнформационнойБазы = 0;
	Сообщение.ИдентификаторСообщения	= ПолучитьПоследнийИдентификаторСообщения();
	Сообщение.ЭтоСсылкаНаОбъект 		= ЭтоСсылкаНаОбъект;
	
	Если ПолучательМК Тогда
		//Формируем задание на отправку
		ЗаписьПакетаНаОтправку = РегистрыСведений.атл_ПакетыНаОтправку.СоздатьМенеджерЗаписи();
		ЗаписьПакетаНаОтправку.ВнутреннийИдентификаторПакета = ПолучитьПоследнийВнутреннийИдентификаторПакетаНаОтправку();
		ЗаписьПакетаНаОтправку.ИдентификаторОбъекта = Сообщение.ИдентификаторСообщения;
		ЗаписьПакетаНаОтправку.ИдентификаторИнформационнойБазы = 0;
		ЗаписьПакетаНаОтправку.ВидДанных = "Сообщение";
		ЗаписьПакетаНаОтправку.ВидПакета = "Новое сообщение";
		ЗаписьПакетаНаОтправку.ДатаСозданияПакета = ТекущаяДата();
		ЗаписьПакетаНаОтправку.ПолучательПакета = Ник;
		ЗаписьПакетаНаОтправку.Записать();
	Иначе
		Сообщение.ДатаДоставки = ДатаСообщения;
		Сообщение.ДатаОтправки = ДатаСообщения;
	КонецЕсли;
	
	Сообщение.Записать(Истина);	
	
	//добавляем сообщение в таблицу сообщений
	НоваяСтрока = Объект.ТаблицаСообщений.Добавить();
	НоваяСтрока.ИдентификаторСообщения = Сообщение.ИдентификаторСообщения;
	НоваяСтрока.ИдентификаторИнформационнойБазы = 0;
	НоваяСтрока.Сообщение       = ТекстСообщения;
	НоваяСтрока.Пользователь	= Ник;
	НоваяСтрока.ДатаРегистрации = ДатаСообщения;
	НоваяСтрока.ДатаСоздания 	= ДатаСообщения;
	НоваяСтрока.ПолучательМК 	= ПолучательМК;
	НоваяСтрока.ДатаДоставки 	= Сообщение.ДатаДоставки; 
	//НоваяСтрока.ДатаОтправки    = ДатаСообщения;
	
	ИдентификаторСообщенияНаЭкране = "s"+СокрЛП(Сообщение.ИдентификаторИнформационнойБазы)+"_"+СокрЛП(Сообщение.ИдентификаторСообщения);
	НоваяСтрока.ИдентификаторСообщенияНаЭкране = ИдентификаторСообщенияНаЭкране;
	НоваяСтрока.ЭтоСсылкаНаОбъект 		= ЭтоСсылкаНаОбъект;
	НоваяСтрока.СсылкаНаОбъект 			= СсылкаНаОбъект;	
	
КонецПроцедуры

&НаСервере
Функция ОпределениеВидаПолучателя(Получатель)
	
	ОпределенПолучательМК = Ложь;
	ОтправляемНаМК = Ложь;
	
	текСтрока = ПолучитьАктуальнуюИнформациюПоПользователю(Получатель);
	
	Если НЕ текСтрока = Неопределено Тогда
		Если ТекСтрока.ЯвляетсяПользователемБД и ТекСтрока.ЯвляетсяПользователемУСС Тогда
			Если ТекСтрока.ПользовательАктивен1С Тогда
				ОпределенПолучательМК = Истина; //1
				ОтправляемНаМК = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ОпределенПолучательМК Тогда  //2й проход
			Если ТекСтрока.ЯвляетсяПользователемМК Тогда
				Если ТекСтрока.ПользовательАктивенМК Тогда
					ОпределенПолучательМК = Истина; 
					ОтправляемНаМК = Истина;
				КонецЕсли;
			КонецЕсли;
			
			Если Не ОпределенПолучательМК Тогда  //3й проход
				Если ТекСтрока.ЯвляетсяПользователемБД и ТекСтрока.ЯвляетсяПользователемУСС Тогда
					Если Не ТекСтрока.ПользовательАктивен1С Тогда //отправляем в оффлайн в 1С
						ОпределенПолучательМК = Истина; 
						ОтправляемНаМК = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				Если Не ОпределенПолучательМК Тогда //4й проход
					Если ТекСтрока.ЯвляетсяПользователемМК Тогда 
						Если Не ТекСтрока.ПользовательАктивенМК Тогда
							ОпределенПолучательМК = Истина; 
							ОтправляемНаМК = Истина;
						КонецЕсли;
					КонецЕсли;
					
					Если Не ОпределенПолучательМК Тогда  //не нашли, выходим...
						Сообщение = Новый СообщениеПользователю;
						Сообщение.Текст = "Невозможно отправить сообщение пользователю: " + ТекСтрока.Пользователь + ". Пользователь пропущен.";
						Сообщение.Сообщить();						
						Возврат Неопределено;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;	
	КонецЕсли;
	
	Возврат ОтправляемНаМК;
	
	
КонецФункции

&НаСервере
Функция ПолучитьАктуальнуюИнформациюПоПользователю(Получатель)
	
	мЗапрос = Новый Запрос;
	мЗапрос.Текст = "ВЫБРАТЬ
	                |	ВложенныйЗапрос.Ссылка КАК Пользователь,
	                |	ВЫБОР
	                |		КОГДА ВложенныйЗапросДатаПоследнейАктивности1С.ДатаПоследнейАктивности ЕСТЬ NULL 
	                |			ТОГДА ЛОЖЬ
	                |		ИНАЧЕ ИСТИНА
	                |	КОНЕЦ КАК ЯвляетсяПользователемБД,
	                |	ЕСТЬNULL(ВложенныйЗапросПользователиМК.ЯвляетсяПользователемМК, ЛОЖЬ) КАК ЯвляетсяПользователемМК,
	                |	ЕСТЬNULL(ВложенныйЗапросАктивныеПользователиМК.ПользовательМКАктивен, ЛОЖЬ) КАК ПользовательАктивенМК,
	                |	ЕСТЬNULL(ВложенныйЗапросАктивныеПользователи1С.Пользователь1САктивен, ЛОЖЬ) КАК ПользовательАктивен1С,
	                |	ВЫБОР
	                |		КОГДА ЕСТЬNULL(ВложенныйЗапросАктивныеПользователиМК.ПользовательМКАктивен, ЛОЖЬ)
	                |				ИЛИ ЕСТЬNULL(ВложенныйЗапросАктивныеПользователи1С.Пользователь1САктивен, ЛОЖЬ)
	                |			ТОГДА ИСТИНА
	                |		ИНАЧЕ ЛОЖЬ
	                |	КОНЕЦ КАК ПользовательАктивен,
	                |	ЕСТЬNULL(ВложенныйЗапросПользователиБД.ЯвляетсяПользователемУСС, ЛОЖЬ) КАК ЯвляетсяПользователемУСС,
	                |	ВЫБОР
	                |		КОГДА ЕСТЬNULL(ВложенныйЗапросДатаПоследнейАктивности1С.ДатаПоследнейАктивности, &ПустаяДата) > ЕСТЬNULL(ВложенныйЗапросДатаПоследнейАктивностиМК.ДатаПоследнейАктивности, &ПустаяДата)
	                |			ТОГДА ЕСТЬNULL(ВложенныйЗапросДатаПоследнейАктивности1С.ДатаПоследнейАктивности, &ПустаяДата)
	                |		ИНАЧЕ ЕСТЬNULL(ВложенныйЗапросДатаПоследнейАктивностиМК.ДатаПоследнейАктивности, &ПустаяДата)
	                |	КОНЕЦ КАК ДатаПоследнейАктивности
	                |ИЗ
	                |	(ВЫБРАТЬ
	                |		Пользователи.Ссылка КАК Ссылка
	                |	ИЗ
	                |		Справочник.Пользователи КАК Пользователи
	                |	ГДЕ
	                |		Пользователи.Ссылка = &Получатель) КАК ВложенныйЗапрос
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                |			ПользователиИБ.Ссылка КАК Пользователь,
	                |			ИСТИНА КАК ЯвляетсяПользователемБД,
	                |			ИСТИНА КАК ЯвляетсяПользователемУСС
	                |		ИЗ
	                |			Справочник.Пользователи КАК ПользователиИБ) КАК ВложенныйЗапросПользователиБД
	                |		ПО ВложенныйЗапрос.Ссылка = ВложенныйЗапросПользователиБД.Пользователь
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                |			атл_НастройкиПодключенияМобильныхСотрудников.Пользователь КАК Пользователь,
	                |			атл_НастройкиПодключенияМобильныхСотрудников.ЯвляетсяПользователемМК КАК ЯвляетсяПользователемМК
	                |		ИЗ
	                |			РегистрСведений.атл_НастройкиПодключенияМобильныхСотрудников КАК атл_НастройкиПодключенияМобильныхСотрудников
	                |		ГДЕ
	                |			атл_НастройкиПодключенияМобильныхСотрудников.ЯвляетсяПользователемМК = ИСТИНА) КАК ВложенныйЗапросПользователиМК
	                |		ПО ВложенныйЗапрос.Ссылка = ВложенныйЗапросПользователиМК.Пользователь
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |			атл_АктивностьПользователей.Пользователь КАК Пользователь,
	                |			ИСТИНА КАК ПользовательМКАктивен,
	                |			атл_АктивностьПользователей.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности
	                |		ИЗ
	                |			РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	                |		ГДЕ
	                |			атл_АктивностьПользователей.ДатаПоследнейАктивности >= &ДатаДопустимойПоследнейАктивности
	                |			И атл_АктивностьПользователей.МК = ИСТИНА) КАК ВложенныйЗапросАктивныеПользователиМК
	                |		ПО ВложенныйЗапрос.Ссылка = ВложенныйЗапросАктивныеПользователиМК.Пользователь
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	                |			атл_АктивностьПользователей.Пользователь КАК Пользователь,
	                |			атл_АктивностьПользователей.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности
	                |		ИЗ
	                |			РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	                |		ГДЕ
	                |			атл_АктивностьПользователей.МК = ИСТИНА) КАК ВложенныйЗапросДатаПоследнейАктивностиМК
	                |		ПО ВложенныйЗапрос.Ссылка = ВложенныйЗапросДатаПоследнейАктивностиМК.Пользователь
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                |			атл_АктивностьПользователей.Пользователь КАК Пользователь,
	                |			ИСТИНА КАК Пользователь1САктивен,
	                |			атл_АктивностьПользователей.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности
	                |		ИЗ
	                |			РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	                |		ГДЕ
	                |			атл_АктивностьПользователей.МК = ЛОЖЬ
	                |			И атл_АктивностьПользователей.ДатаПоследнейАктивности >= &ДатаДопустимойПоследнейАктивности) КАК ВложенныйЗапросАктивныеПользователи1С
	                |		ПО ВложенныйЗапрос.Ссылка = ВложенныйЗапросАктивныеПользователи1С.Пользователь
	                |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                |			атл_АктивностьПользователей.Пользователь КАК Пользователь,
	                |			атл_АктивностьПользователей.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности
	                |		ИЗ
	                |			РегистрСведений.атл_АктивностьПользователей КАК атл_АктивностьПользователей
	                |		ГДЕ
	                |			атл_АктивностьПользователей.МК = ЛОЖЬ) КАК ВложенныйЗапросДатаПоследнейАктивности1С
	                |		ПО ВложенныйЗапрос.Ссылка = ВложенныйЗапросДатаПоследнейАктивности1С.Пользователь";
	
	мЗапрос.УстановитьПараметр("ДатаДопустимойПоследнейАктивности", ТекущаяДата() - 300);			
	мЗапрос.УстановитьПараметр("ПустаяДата", Дата("00010101"));
	мЗапрос.УстановитьПараметр("Получатель", Получатель);	

	мВыборка = мЗапрос.Выполнить().Выбрать();
	Если мВыборка.Следующий() Тогда
		Возврат мВыборка;
	Иначе
		Возврат Неопределено;	
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьПоследнийИдентификаторСообщения() 
	
	//получить последний внутренний идентификатор
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	атл_Сообщения.ИдентификаторСообщения КАК ИдентификаторСообщения
	               |ИЗ
	               |	РегистрСведений.атл_Сообщения КАК атл_Сообщения
	               |ГДЕ
	               |	атл_Сообщения.ИдентификаторИнформационнойБазы = 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ИдентификаторСообщения УБЫВ
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ИдентификаторСообщения = Выборка.ИдентификаторСообщения + 1;
	Иначе
		ИдентификаторСообщения = 1;
	КонецЕсли;
	
	Возврат	ИдентификаторСообщения; 
	
КонецФункции

&НаСервере
Функция ПолучитьПоследнийВнутреннийИдентификаторПакетаНаОтправку() 
	
	//получить последний внутренний идентификатор
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	атл_ПакетыНаОтправку.ВнутреннийИдентификаторПакета КАК ВнутреннийИдентификаторПакета
	|ИЗ
	|	РегистрСведений.атл_ПакетыНаОтправку КАК атл_ПакетыНаОтправку
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВнутреннийИдентификаторПакета УБЫВ
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		ВнутреннийИдентификаторПакета = Выборка.ВнутреннийИдентификаторПакета + 1;
	Иначе
		ВнутреннийИдентификаторПакета = 1;
	КонецЕсли;
	
	Возврат	ВнутреннийИдентификаторПакета; 
	
КонецФункции

#КонецОбласти